{
    "name": "synthetics",
    "displayName": "pulumi-signalfx-synthetics",
    "description": "A Pulumi package for creating and managing pulumi-signalfx-synthetics cloud resources.",
    "keywords": [
        "displayr",
        "pulumi-signalfx-synthetics",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`synthetics` Terraform Provider](https://github.com/splunk/terraform-provider-synthetics).",
    "repository": "https://github.com/displayr/pulumi-signalfx-synthetics",
    "pluginDownloadURL": "https://github.com/Displayr/pulumi-signalfx-synthetics/releases/download/v0.0.12/",
    "publisher": "displayr",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing pulumi-signalfx-synthetics cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/splunk/terraform-provider-synthetics)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-synthetics` repo](https://github.com/displayr/pulumi-signalfx-synthetics/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-synthetics` repo](https://github.com/splunk/terraform-provider-synthetics/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/splunk/terraform-provider-synthetics)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-synthetics` repo](https://github.com/displayr/pulumi-signalfx-synthetics/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-synthetics` repo](https://github.com/splunk/terraform-provider-synthetics/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apikey": {
                "type": "string",
                "description": "Splunk Observability API Key. Will pull from `OBSERVABILITY_API_TOKEN` environment variable if available.\n",
                "defaultInfo": {
                    "environment": [
                        "OBSERVABILITY_API_TOKEN"
                    ]
                }
            },
            "product": {
                "type": "string",
                "description": "One of: `observability` or `rigor`\n"
            },
            "realm": {
                "type": "string",
                "description": "Splunk Observability Realm (E.G. `us1`). Will pull from `REALM` environment variable if available. For Rigor use realm\nrigor\n"
            }
        },
        "defaults": [
            "apikey",
            "product",
            "realm"
        ]
    },
    "types": {
        "synthetics:index/SyntheticsCreateApiCheckV2Test:SyntheticsCreateApiCheckV2Test": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "deviceId": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "integer"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2TestRequest:SyntheticsCreateApiCheckV2TestRequest"
                    }
                },
                "schedulingStrategy": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "deviceId",
                "frequency",
                "locationIds",
                "name"
            ]
        },
        "synthetics:index/SyntheticsCreateApiCheckV2TestRequest:SyntheticsCreateApiCheckV2TestRequest": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2TestRequestConfiguration:SyntheticsCreateApiCheckV2TestRequestConfiguration"
                    }
                },
                "setups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2TestRequestSetup:SyntheticsCreateApiCheckV2TestRequestSetup"
                    }
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2TestRequestValidation:SyntheticsCreateApiCheckV2TestRequestValidation"
                    }
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateApiCheckV2TestRequestConfiguration:SyntheticsCreateApiCheckV2TestRequestConfiguration": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requestMethod": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateApiCheckV2TestRequestSetup:SyntheticsCreateApiCheckV2TestRequestSetup": {
            "properties": {
                "extractor": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateApiCheckV2TestRequestValidation:SyntheticsCreateApiCheckV2TestRequestValidation": {
            "properties": {
                "actual": {
                    "type": "string"
                },
                "comparator": {
                    "type": "string"
                },
                "expected": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckBlackoutPeriod:SyntheticsCreateBrowserCheckBlackoutPeriod": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "durationInMinutes": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "monthlyRepeatType": {
                    "type": "string"
                },
                "repeatType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "durationInMinutes",
                        "endDate",
                        "endTime",
                        "isRepeat",
                        "monthlyRepeatType",
                        "repeatType",
                        "startDate",
                        "startTime",
                        "timezone",
                        "updatedAt"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckBrowser:SyntheticsCreateBrowserCheckBrowser": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckCheckConnection:SyntheticsCreateBrowserCheckCheckConnection": {
            "properties": {
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "number"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckCookie:SyntheticsCreateBrowserCheckCookie": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckDnsOverride:SyntheticsCreateBrowserCheckDnsOverride": {
            "properties": {
                "originalDomain": {
                    "type": "string"
                },
                "originalHost": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckExcludedFile:SyntheticsCreateBrowserCheckExcludedFile": {
            "properties": {
                "exclusionType": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckHttpRequestHeader:SyntheticsCreateBrowserCheckHttpRequestHeader": {
            "properties": {
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "userAgent"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckJavascriptFile:SyntheticsCreateBrowserCheckJavascriptFile": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotification:SyntheticsCreateBrowserCheckNotification": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "escalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalation:SyntheticsCreateBrowserCheckNotificationEscalation"
                    }
                },
                "muted": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationNotificationWindow:SyntheticsCreateBrowserCheckNotificationNotificationWindow"
                    }
                },
                "notifyAfterFailureCount": {
                    "type": "integer"
                },
                "notifyOnLocationFailure": {
                    "type": "boolean"
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationNotifyWho:SyntheticsCreateBrowserCheckNotificationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "notificationWindows"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalation:SyntheticsCreateBrowserCheckNotificationEscalation": {
            "properties": {
                "afterMinutes": {
                    "type": "integer"
                },
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow:SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow"
                    }
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho:SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isRepeat",
                        "notificationWindows"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow:SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho:SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "customUserEmail": {
                    "type": "string"
                },
                "email": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink:SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink"
                    }
                },
                "sms": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "links"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink:SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "selfHtml"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationNotificationWindow:SyntheticsCreateBrowserCheckNotificationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationNotifyWho:SyntheticsCreateBrowserCheckNotificationNotifyWho": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "customUserEmail": {
                    "type": "string"
                },
                "email": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotificationNotifyWhoLink:SyntheticsCreateBrowserCheckNotificationNotifyWhoLink"
                    }
                },
                "sms": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "links"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckNotificationNotifyWhoLink:SyntheticsCreateBrowserCheckNotificationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "selfHtml"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateBrowserCheckStep:SyntheticsCreateBrowserCheckStep": {
            "properties": {
                "how": {
                    "type": "string"
                },
                "itemMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "what": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckSuccessCriteria:SyntheticsCreateBrowserCheckSuccessCriteria": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "comparisonString": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckThresholdMonitor:SyntheticsCreateBrowserCheckThresholdMonitor": {
            "properties": {
                "comparisonType": {
                    "type": "string"
                },
                "matcher": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2Test:SyntheticsCreateBrowserCheckV2Test": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "advancedSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSetting:SyntheticsCreateBrowserCheckV2TestAdvancedSetting"
                    }
                },
                "deviceId": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "integer"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "startUrl": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestTransaction:SyntheticsCreateBrowserCheckV2TestTransaction"
                    }
                },
                "urlProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "startUrl",
                "transactions",
                "urlProtocol"
            ]
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSetting:SyntheticsCreateBrowserCheckV2TestAdvancedSetting": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication:SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication"
                    }
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie:SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader:SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader"
                    }
                },
                "hostOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride:SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride"
                    }
                },
                "userAgent": {
                    "type": "string"
                },
                "verifyCertificates": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication:SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie:SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader:SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride:SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride": {
            "properties": {
                "keepHostHeader": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestTransaction:SyntheticsCreateBrowserCheckV2TestTransaction": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestTransactionStep:SyntheticsCreateBrowserCheckV2TestTransactionStep"
                    }
                }
            },
            "type": "object",
            "required": [
                "steps"
            ]
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestTransactionStep:SyntheticsCreateBrowserCheckV2TestTransactionStep": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "optionSelector": {
                    "type": "string"
                },
                "optionSelectorType": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2TestTransactionStepOption:SyntheticsCreateBrowserCheckV2TestTransactionStepOption"
                    }
                },
                "selector": {
                    "type": "string"
                },
                "selectorType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "waitForNav": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "waitForNav"
            ]
        },
        "synthetics:index/SyntheticsCreateBrowserCheckV2TestTransactionStepOption:SyntheticsCreateBrowserCheckV2TestTransactionStepOption": {
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateBrowserCheckViewport:SyntheticsCreateBrowserCheckViewport": {
            "properties": {
                "height": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateHttpCheckBlackoutPeriod:SyntheticsCreateHttpCheckBlackoutPeriod": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "durationInMinutes": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "monthlyRepeatType": {
                    "type": "string"
                },
                "repeatType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "durationInMinutes",
                        "endDate",
                        "endTime",
                        "isRepeat",
                        "monthlyRepeatType",
                        "repeatType",
                        "startDate",
                        "startTime",
                        "timezone",
                        "updatedAt"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckCheckConnection:SyntheticsCreateHttpCheckCheckConnection": {
            "properties": {
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "number"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateHttpCheckHttpRequestHeader:SyntheticsCreateHttpCheckHttpRequestHeader": {
            "properties": {
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "userAgent"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotification:SyntheticsCreateHttpCheckNotification": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "escalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationEscalation:SyntheticsCreateHttpCheckNotificationEscalation"
                    }
                },
                "muted": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationNotificationWindow:SyntheticsCreateHttpCheckNotificationNotificationWindow"
                    }
                },
                "notifyAfterFailureCount": {
                    "type": "integer"
                },
                "notifyOnLocationFailure": {
                    "type": "boolean"
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationNotifyWho:SyntheticsCreateHttpCheckNotificationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "notificationWindows"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationEscalation:SyntheticsCreateHttpCheckNotificationEscalation": {
            "properties": {
                "afterMinutes": {
                    "type": "integer"
                },
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow:SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow"
                    }
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotifyWho:SyntheticsCreateHttpCheckNotificationEscalationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isRepeat",
                        "notificationWindows"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow:SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotifyWho:SyntheticsCreateHttpCheckNotificationEscalationNotifyWho": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "customUserEmail": {
                    "type": "string"
                },
                "email": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink:SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink"
                    }
                },
                "sms": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "links"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink:SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "selfHtml"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationNotificationWindow:SyntheticsCreateHttpCheckNotificationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationNotifyWho:SyntheticsCreateHttpCheckNotificationNotifyWho": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "customUserEmail": {
                    "type": "string"
                },
                "email": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotificationNotifyWhoLink:SyntheticsCreateHttpCheckNotificationNotifyWhoLink"
                    }
                },
                "sms": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "links"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckNotificationNotifyWhoLink:SyntheticsCreateHttpCheckNotificationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "selfHtml"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreateHttpCheckSuccessCriteria:SyntheticsCreateHttpCheckSuccessCriteria": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "comparisonString": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateHttpCheckV2Test:SyntheticsCreateHttpCheckV2Test": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckV2TestHeader:SyntheticsCreateHttpCheckV2TestHeader"
                    }
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requestMethod": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "frequency",
                "locationIds",
                "name",
                "requestMethod",
                "url"
            ]
        },
        "synthetics:index/SyntheticsCreateHttpCheckV2TestHeader:SyntheticsCreateHttpCheckV2TestHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/SyntheticsCreateLocationV2Location:SyntheticsCreateLocationV2Location": {
            "properties": {
                "country": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "willReplaceOnChanges": true
                },
                "label": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "id",
                        "label",
                        "type"
                    ]
                }
            }
        },
        "synthetics:index/SyntheticsCreatePortCheckV2Test:SyntheticsCreatePortCheckV2Test": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "frequency": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "frequency",
                "host",
                "locationIds",
                "name",
                "port",
                "protocol"
            ]
        },
        "synthetics:index/SyntheticsCreateVariableV2Variable:SyntheticsCreateVariableV2Variable": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secret": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "secret",
                "value"
            ]
        },
        "synthetics:index/syntheticsApiV2CheckTest:syntheticsApiV2CheckTest": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestDevice:syntheticsApiV2CheckTestDevice"
                    }
                },
                "frequency": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestRequest:syntheticsApiV2CheckTestRequest"
                    }
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "createdAt",
                "devices",
                "frequency",
                "id",
                "name",
                "requests",
                "schedulingStrategy",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsApiV2CheckTestDevice:syntheticsApiV2CheckTestDevice": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "networkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestDeviceNetworkConnection:syntheticsApiV2CheckTestDeviceNetworkConnection"
                    }
                },
                "userAgent": {
                    "type": "string"
                },
                "viewportHeight": {
                    "type": "integer"
                },
                "viewportWidth": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label",
                "networkConnections",
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsApiV2CheckTestDeviceNetworkConnection:syntheticsApiV2CheckTestDeviceNetworkConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "integer"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsApiV2CheckTestRequest:syntheticsApiV2CheckTestRequest": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestRequestConfiguration:syntheticsApiV2CheckTestRequestConfiguration"
                    }
                },
                "setups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestRequestSetup:syntheticsApiV2CheckTestRequestSetup"
                    }
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTestRequestValidation:syntheticsApiV2CheckTestRequestValidation"
                    }
                }
            },
            "type": "object",
            "required": [
                "setups",
                "validations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsApiV2CheckTestRequestConfiguration:syntheticsApiV2CheckTestRequestConfiguration": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requestMethod": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsApiV2CheckTestRequestSetup:syntheticsApiV2CheckTestRequestSetup": {
            "properties": {
                "extractor": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsApiV2CheckTestRequestValidation:syntheticsApiV2CheckTestRequestValidation": {
            "properties": {
                "actual": {
                    "type": "string"
                },
                "comparator": {
                    "type": "string"
                },
                "expected": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTest:syntheticsBrowserV2CheckTest": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "advancedSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestAdvancedSetting:syntheticsBrowserV2CheckTestAdvancedSetting"
                    }
                },
                "businessTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestBusinessTransaction:syntheticsBrowserV2CheckTestBusinessTransaction"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestDevice:syntheticsBrowserV2CheckTestDevice"
                    }
                },
                "frequency": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestTransaction:syntheticsBrowserV2CheckTestTransaction"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "advancedSettings",
                "businessTransactions",
                "createdAt",
                "devices",
                "frequency",
                "id",
                "locationIds",
                "name",
                "schedulingStrategy",
                "transactions",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestAdvancedSetting:syntheticsBrowserV2CheckTestAdvancedSetting": {
            "properties": {
                "authentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingAuthentication:syntheticsBrowserV2CheckTestAdvancedSettingAuthentication"
                    }
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingCookie:syntheticsBrowserV2CheckTestAdvancedSettingCookie"
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingHeader:syntheticsBrowserV2CheckTestAdvancedSettingHeader"
                    }
                },
                "hostOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingHostOverride:syntheticsBrowserV2CheckTestAdvancedSettingHostOverride"
                    }
                },
                "userAgent": {
                    "type": "string"
                },
                "verifyCertificates": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "authentications",
                "cookies",
                "headers",
                "hostOverrides",
                "userAgent",
                "verifyCertificates"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingAuthentication:syntheticsBrowserV2CheckTestAdvancedSettingAuthentication": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingCookie:syntheticsBrowserV2CheckTestAdvancedSettingCookie": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingHeader:syntheticsBrowserV2CheckTestAdvancedSettingHeader": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestAdvancedSettingHostOverride:syntheticsBrowserV2CheckTestAdvancedSettingHostOverride": {
            "properties": {
                "keepHostHeader": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestBusinessTransaction:syntheticsBrowserV2CheckTestBusinessTransaction": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestBusinessTransactionStep:syntheticsBrowserV2CheckTestBusinessTransactionStep"
                    }
                }
            },
            "type": "object",
            "required": [
                "steps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestBusinessTransactionStep:syntheticsBrowserV2CheckTestBusinessTransactionStep": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "optionSelector": {
                    "type": "string"
                },
                "optionSelectorType": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestBusinessTransactionStepOption:syntheticsBrowserV2CheckTestBusinessTransactionStepOption"
                    }
                },
                "selector": {
                    "type": "string"
                },
                "selectorType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "waitForNav": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "options"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestBusinessTransactionStepOption:syntheticsBrowserV2CheckTestBusinessTransactionStepOption": {
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestDevice:syntheticsBrowserV2CheckTestDevice": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "networkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestDeviceNetworkConnection:syntheticsBrowserV2CheckTestDeviceNetworkConnection"
                    }
                },
                "userAgent": {
                    "type": "string"
                },
                "viewportHeight": {
                    "type": "integer"
                },
                "viewportWidth": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label",
                "networkConnections",
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestDeviceNetworkConnection:syntheticsBrowserV2CheckTestDeviceNetworkConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "integer"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsBrowserV2CheckTestTransaction:syntheticsBrowserV2CheckTestTransaction": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestTransactionStep:syntheticsBrowserV2CheckTestTransactionStep"
                    }
                }
            },
            "type": "object",
            "required": [
                "steps"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestTransactionStep:syntheticsBrowserV2CheckTestTransactionStep": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "optionSelector": {
                    "type": "string"
                },
                "optionSelectorType": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTestTransactionStepOption:syntheticsBrowserV2CheckTestTransactionStepOption"
                    }
                },
                "selector": {
                    "type": "string"
                },
                "selectorType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "waitForNav": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "options"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsBrowserV2CheckTestTransactionStepOption:syntheticsBrowserV2CheckTestTransactionStepOption": {
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckBlackoutPeriod:syntheticsCheckBlackoutPeriod": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "durationInMinutes": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "monthlyRepeatType": {
                    "type": "string"
                },
                "repeatType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "durationInMinutes",
                "endDate",
                "endTime",
                "isRepeat",
                "monthlyRepeatType",
                "repeatType",
                "startDate",
                "startTime",
                "timezone",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckBrowser:syntheticsCheckBrowser": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckCheckConnection:syntheticsCheckCheckConnection": {
            "properties": {
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "integer"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "downloadBandwidth",
                "latency",
                "packetLoss",
                "uploadBandwidth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckCookie:syntheticsCheckCookie": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckDnsOverride:syntheticsCheckDnsOverride": {
            "properties": {
                "originalDomain": {
                    "type": "string"
                },
                "originalHost": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckExcludedFile:syntheticsCheckExcludedFile": {
            "properties": {
                "exclusionType": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckHttpRequestHeader:syntheticsCheckHttpRequestHeader": {
            "properties": {
                "userAgent": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckIntegration:syntheticsCheckIntegration": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckJavascriptFile:syntheticsCheckJavascriptFile": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckLink:syntheticsCheckLink": {
            "properties": {
                "lastRun": {
                    "type": "string"
                },
                "metrics": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lastRun",
                "metrics",
                "self",
                "selfHtml"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckLocation:syntheticsCheckLocation": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "regionCode": {
                    "type": "string"
                },
                "worldRegion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "regionCode",
                "worldRegion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotification:syntheticsCheckNotification": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "escalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationEscalation:syntheticsCheckNotificationEscalation"
                    }
                },
                "muted": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationNotificationWindow:syntheticsCheckNotificationNotificationWindow"
                    }
                },
                "notifyAfterFailureCount": {
                    "type": "integer"
                },
                "notifyOnLocationFailure": {
                    "type": "boolean"
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationNotifyWho:syntheticsCheckNotificationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "call",
                "email",
                "escalations",
                "muted",
                "notificationWindows",
                "notifyAfterFailureCount",
                "notifyOnLocationFailure",
                "notifyWhos",
                "sms"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationEscalation:syntheticsCheckNotificationEscalation": {
            "properties": {
                "afterMinutes": {
                    "type": "integer"
                },
                "call": {
                    "type": "boolean"
                },
                "email": {
                    "type": "boolean"
                },
                "isRepeat": {
                    "type": "boolean"
                },
                "notificationWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationEscalationNotificationWindow:syntheticsCheckNotificationEscalationNotificationWindow"
                    }
                },
                "notifyWhos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationEscalationNotifyWho:syntheticsCheckNotificationEscalationNotifyWho"
                    }
                },
                "sms": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "afterMinutes",
                "call",
                "email",
                "isRepeat",
                "notificationWindows",
                "notifyWhos",
                "sms"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationEscalationNotificationWindow:syntheticsCheckNotificationEscalationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "durationInMinutes",
                "endTime",
                "startTime",
                "timeZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationEscalationNotifyWho:syntheticsCheckNotificationEscalationNotifyWho": {
            "properties": {
                "customUserEmail": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationEscalationNotifyWhoLink:syntheticsCheckNotificationEscalationNotifyWhoLink"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "links"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationEscalationNotifyWhoLink:syntheticsCheckNotificationEscalationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "selfHtml"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationNotificationWindow:syntheticsCheckNotificationNotificationWindow": {
            "properties": {
                "durationInMinutes": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "durationInMinutes",
                "endTime",
                "startTime",
                "timeZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationNotifyWho:syntheticsCheckNotificationNotifyWho": {
            "properties": {
                "call": {
                    "type": "boolean"
                },
                "customUserEmail": {
                    "type": "string"
                },
                "email": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsCheckNotificationNotifyWhoLink:syntheticsCheckNotificationNotifyWhoLink"
                    }
                },
                "sms": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "links"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckNotificationNotifyWhoLink:syntheticsCheckNotificationNotifyWhoLink": {
            "properties": {
                "selfHtml": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "selfHtml"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckStatus:syntheticsCheckStatus": {
            "properties": {
                "hasFailure": {
                    "type": "boolean"
                },
                "hasLocationFailure": {
                    "type": "boolean"
                },
                "lastAlertAt": {
                    "type": "string"
                },
                "lastCode": {
                    "type": "integer"
                },
                "lastFailureAt": {
                    "type": "string"
                },
                "lastMessage": {
                    "type": "string"
                },
                "lastResponseTime": {
                    "type": "integer"
                },
                "lastRunAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hasFailure",
                "hasLocationFailure",
                "lastAlertAt",
                "lastCode",
                "lastFailureAt",
                "lastMessage",
                "lastResponseTime",
                "lastRunAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckStep:syntheticsCheckStep": {
            "properties": {
                "how": {
                    "type": "string"
                },
                "itemMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "what": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckSuccessCriteria:syntheticsCheckSuccessCriteria": {
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "comparisonString": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "comparisonString",
                "createdAt",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckTag:syntheticsCheckTag": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsCheckThresholdMonitor:syntheticsCheckThresholdMonitor": {
            "properties": {
                "comparisonType": {
                    "type": "string"
                },
                "matcher": {
                    "type": "string"
                },
                "metricName": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsCheckViewport:syntheticsCheckViewport": {
            "properties": {
                "height": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsDevicesV2CheckDevice:syntheticsDevicesV2CheckDevice": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "label": {
                    "type": "string"
                },
                "networkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsDevicesV2CheckDeviceNetworkConnection:syntheticsDevicesV2CheckDeviceNetworkConnection"
                    }
                },
                "userAgent": {
                    "type": "string"
                },
                "viewportHeight": {
                    "type": "integer"
                },
                "viewportWidth": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label",
                "networkConnections",
                "userAgent",
                "viewportHeight",
                "viewportWidth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsDevicesV2CheckDeviceNetworkConnection:syntheticsDevicesV2CheckDeviceNetworkConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "downloadBandwidth": {
                    "type": "integer"
                },
                "latency": {
                    "type": "integer"
                },
                "packetLoss": {
                    "type": "integer"
                },
                "uploadBandwidth": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "description",
                "downloadBandwidth",
                "latency",
                "packetLoss"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsHttpV2CheckTest:syntheticsHttpV2CheckTest": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "body": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/syntheticsHttpV2CheckTestHeader:syntheticsHttpV2CheckTestHeader"
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "requestMethod": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "body",
                "createdAt",
                "frequency",
                "headers",
                "id",
                "name",
                "requestMethod",
                "schedulingStrategy",
                "type",
                "updatedAt",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsHttpV2CheckTestHeader:syntheticsHttpV2CheckTestHeader": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "synthetics:index/syntheticsLocationV2CheckLocation:syntheticsLocationV2CheckLocation": {
            "properties": {
                "country": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "country",
                "default",
                "id",
                "label",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsLocationV2CheckMeta:syntheticsLocationV2CheckMeta": {
            "properties": {
                "activeTestIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pausedTestIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "required": [
                "activeTestIds",
                "pausedTestIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsLocationsV2CheckLocation:syntheticsLocationsV2CheckLocation": {
            "properties": {
                "country": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "country",
                "default",
                "id",
                "label",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "synthetics:index/syntheticsPortV2CheckTest:syntheticsPortV2CheckTest": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "frequency": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "locationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "schedulingStrategy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "active",
                "createdAt",
                "frequency",
                "host",
                "id",
                "name",
                "port",
                "protocol",
                "schedulingStrategy",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsVariableV2CheckVariable:syntheticsVariableV2CheckVariable": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "id",
                "name",
                "secret",
                "updatedAt",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "id"
                    ]
                }
            }
        },
        "synthetics:index/syntheticsVariablesV2CheckVariable:syntheticsVariablesV2CheckVariable": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of this resource.\n"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "id",
                "name",
                "secret",
                "updatedAt",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the synthetics package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apikey": {
                "type": "string",
                "description": "Splunk Observability API Key. Will pull from `OBSERVABILITY_API_TOKEN` environment variable if available.\n"
            },
            "product": {
                "type": "string",
                "description": "One of: `observability` or `rigor`\n"
            },
            "realm": {
                "type": "string",
                "description": "Splunk Observability Realm (E.G. `us1`). Will pull from `REALM` environment variable if available. For Rigor use realm\nrigor\n"
            }
        },
        "required": [
            "product",
            "realm"
        ],
        "inputProperties": {
            "apikey": {
                "type": "string",
                "description": "Splunk Observability API Key. Will pull from `OBSERVABILITY_API_TOKEN` environment variable if available.\n",
                "defaultInfo": {
                    "environment": [
                        "OBSERVABILITY_API_TOKEN"
                    ]
                }
            },
            "product": {
                "type": "string",
                "description": "One of: `observability` or `rigor`\n"
            },
            "realm": {
                "type": "string",
                "description": "Splunk Observability Realm (E.G. `us1`). Will pull from `REALM` environment variable if available. For Rigor use realm\nrigor\n"
            }
        },
        "requiredInputs": [
            "product",
            "realm"
        ]
    },
    "resources": {
        "synthetics:index/syntheticsCreateApiCheckV2:SyntheticsCreateApiCheckV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst apiV2FooCheck = new synthetics.SyntheticsCreateApiCheckV2(\"apiV2FooCheck\", {tests: [{\n    active: true,\n    deviceId: 1,\n    frequency: 5,\n    locationIds: [\"aws-us-east-1\"],\n    name: \"Terraform - Api V2 Checkaroo\",\n    schedulingStrategy: \"round_robin\",\n    requests: [{\n        configurations: [{\n            body: \"\\\\'{\\\"alert_name\\\":\\\"the service is down\\\",\\\"url\\\":\\\"https://foo.com/bar\\\"}\\\\'\\n\",\n            headers: {\n                Accept: \"application/json\",\n                \"x-foo\": \"bar\",\n            },\n            name: \"Get products\",\n            requestMethod: \"GET\",\n            url: \"https://dummyjson.com/products\",\n        }],\n        setups: [{\n            extractor: \"$.foo\",\n            name: \"First setup step\",\n            source: \"{\\\\'foo\\\\': \\\\'bar\\\\'}\",\n            type: \"extract_json\",\n            variable: \"myVariable\",\n        }],\n        validations: [{\n            actual: \"{{response.code}}\",\n            comparator: \"equals\",\n            expected: \"200\",\n            name: \"My validation step\",\n            type: \"assert_numeric\",\n        }],\n    }],\n}]});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\napi_v2_foo_check = synthetics.SyntheticsCreateApiCheckV2(\"apiV2FooCheck\", tests=[synthetics.SyntheticsCreateApiCheckV2TestArgs(\n    active=True,\n    device_id=1,\n    frequency=5,\n    location_ids=[\"aws-us-east-1\"],\n    name=\"Terraform - Api V2 Checkaroo\",\n    scheduling_strategy=\"round_robin\",\n    requests=[synthetics.SyntheticsCreateApiCheckV2TestRequestArgs(\n        configurations=[synthetics.SyntheticsCreateApiCheckV2TestRequestConfigurationArgs(\n            body=\"\\\\'{\\\"alert_name\\\":\\\"the service is down\\\",\\\"url\\\":\\\"https://foo.com/bar\\\"}\\\\'\\n\",\n            headers={\n                \"Accept\": \"application/json\",\n                \"x-foo\": \"bar\",\n            },\n            name=\"Get products\",\n            request_method=\"GET\",\n            url=\"https://dummyjson.com/products\",\n        )],\n        setups=[synthetics.SyntheticsCreateApiCheckV2TestRequestSetupArgs(\n            extractor=\"$.foo\",\n            name=\"First setup step\",\n            source=\"{\\\\'foo\\\\': \\\\'bar\\\\'}\",\n            type=\"extract_json\",\n            variable=\"myVariable\",\n        )],\n        validations=[synthetics.SyntheticsCreateApiCheckV2TestRequestValidationArgs(\n            actual=\"{{response.code}}\",\n            comparator=\"equals\",\n            expected=\"200\",\n            name=\"My validation step\",\n            type=\"assert_numeric\",\n        )],\n    )],\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var apiV2FooCheck = new Synthetics.SyntheticsCreateApiCheckV2(\"apiV2FooCheck\", new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsCreateApiCheckV2TestArgs\n            {\n                Active = true,\n                DeviceId = 1,\n                Frequency = 5,\n                LocationIds = new[]\n                {\n                    \"aws-us-east-1\",\n                },\n                Name = \"Terraform - Api V2 Checkaroo\",\n                SchedulingStrategy = \"round_robin\",\n                Requests = new[]\n                {\n                    new Synthetics.Inputs.SyntheticsCreateApiCheckV2TestRequestArgs\n                    {\n                        Configurations = new[]\n                        {\n                            new Synthetics.Inputs.SyntheticsCreateApiCheckV2TestRequestConfigurationArgs\n                            {\n                                Body = @\"\\'{\"\"alert_name\"\":\"\"the service is down\"\",\"\"url\"\":\"\"https://foo.com/bar\"\"}\\'\n\",\n                                Headers = \n                                {\n                                    { \"Accept\", \"application/json\" },\n                                    { \"x-foo\", \"bar\" },\n                                },\n                                Name = \"Get products\",\n                                RequestMethod = \"GET\",\n                                Url = \"https://dummyjson.com/products\",\n                            },\n                        },\n                        Setups = new[]\n                        {\n                            new Synthetics.Inputs.SyntheticsCreateApiCheckV2TestRequestSetupArgs\n                            {\n                                Extractor = \"$.foo\",\n                                Name = \"First setup step\",\n                                Source = \"{\\\\'foo\\\\': \\\\'bar\\\\'}\",\n                                Type = \"extract_json\",\n                                Variable = \"myVariable\",\n                            },\n                        },\n                        Validations = new[]\n                        {\n                            new Synthetics.Inputs.SyntheticsCreateApiCheckV2TestRequestValidationArgs\n                            {\n                                Actual = \"{{response.code}}\",\n                                Comparator = \"equals\",\n                                Expected = \"200\",\n                                Name = \"My validation step\",\n                                Type = \"assert_numeric\",\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.NewSyntheticsCreateApiCheckV2(ctx, \"apiV2FooCheck\", \u0026synthetics.SyntheticsCreateApiCheckV2Args{\n\t\t\tTests: synthetics.SyntheticsCreateApiCheckV2TestArray{\n\t\t\t\t\u0026synthetics.SyntheticsCreateApiCheckV2TestArgs{\n\t\t\t\t\tActive:    pulumi.Bool(true),\n\t\t\t\t\tDeviceId:  pulumi.Int(1),\n\t\t\t\t\tFrequency: pulumi.Int(5),\n\t\t\t\t\tLocationIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"aws-us-east-1\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:               pulumi.String(\"Terraform - Api V2 Checkaroo\"),\n\t\t\t\t\tSchedulingStrategy: pulumi.String(\"round_robin\"),\n\t\t\t\t\tRequests: synthetics.SyntheticsCreateApiCheckV2TestRequestArray{\n\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateApiCheckV2TestRequestArgs{\n\t\t\t\t\t\t\tConfigurations: synthetics.SyntheticsCreateApiCheckV2TestRequestConfigurationArray{\n\t\t\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateApiCheckV2TestRequestConfigurationArgs{\n\t\t\t\t\t\t\t\t\tBody: pulumi.String(\"\\\\'{\\\"alert_name\\\":\\\"the service is down\\\",\\\"url\\\":\\\"https://foo.com/bar\\\"}\\\\'\\n\"),\n\t\t\t\t\t\t\t\t\tHeaders: pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"Accept\": pulumi.String(\"application/json\"),\n\t\t\t\t\t\t\t\t\t\t\"x-foo\":  pulumi.String(\"bar\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tName:          pulumi.String(\"Get products\"),\n\t\t\t\t\t\t\t\t\tRequestMethod: pulumi.String(\"GET\"),\n\t\t\t\t\t\t\t\t\tUrl:           pulumi.String(\"https://dummyjson.com/products\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSetups: synthetics.SyntheticsCreateApiCheckV2TestRequestSetupArray{\n\t\t\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateApiCheckV2TestRequestSetupArgs{\n\t\t\t\t\t\t\t\t\tExtractor: pulumi.String(\"$.foo\"),\n\t\t\t\t\t\t\t\t\tName:      pulumi.String(\"First setup step\"),\n\t\t\t\t\t\t\t\t\tSource:    pulumi.String(\"{\\\\'foo\\\\': \\\\'bar\\\\'}\"),\n\t\t\t\t\t\t\t\t\tType:      pulumi.String(\"extract_json\"),\n\t\t\t\t\t\t\t\t\tVariable:  pulumi.String(\"myVariable\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tValidations: synthetics.SyntheticsCreateApiCheckV2TestRequestValidationArray{\n\t\t\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateApiCheckV2TestRequestValidationArgs{\n\t\t\t\t\t\t\t\t\tActual:     pulumi.String(\"{{response.code}}\"),\n\t\t\t\t\t\t\t\t\tComparator: pulumi.String(\"equals\"),\n\t\t\t\t\t\t\t\t\tExpected:   pulumi.String(\"200\"),\n\t\t\t\t\t\t\t\t\tName:       pulumi.String(\"My validation step\"),\n\t\t\t\t\t\t\t\t\tType:       pulumi.String(\"assert_numeric\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreateApiCheckV2;\nimport com.pulumi.synthetics.SyntheticsCreateApiCheckV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreateApiCheckV2TestArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var apiV2FooCheck = new SyntheticsCreateApiCheckV2(\"apiV2FooCheck\", SyntheticsCreateApiCheckV2Args.builder()        \n            .tests(SyntheticsCreateApiCheckV2TestArgs.builder()\n                .active(true)\n                .deviceId(1)\n                .frequency(5)\n                .locationIds(\"aws-us-east-1\")\n                .name(\"Terraform - Api V2 Checkaroo\")\n                .schedulingStrategy(\"round_robin\")\n                .requests(SyntheticsCreateApiCheckV2TestRequestArgs.builder()\n                    .configurations(SyntheticsCreateApiCheckV2TestRequestConfigurationArgs.builder()\n                        .body(\"\"\"\n\\'{\"alert_name\":\"the service is down\",\"url\":\"https://foo.com/bar\"}\\'\n                        \"\"\")\n                        .headers(Map.ofEntries(\n                            Map.entry(\"Accept\", \"application/json\"),\n                            Map.entry(\"x-foo\", \"bar\")\n                        ))\n                        .name(\"Get products\")\n                        .requestMethod(\"GET\")\n                        .url(\"https://dummyjson.com/products\")\n                        .build())\n                    .setups(SyntheticsCreateApiCheckV2TestRequestSetupArgs.builder()\n                        .extractor(\"$.foo\")\n                        .name(\"First setup step\")\n                        .source(\"{\\\\'foo\\\\': \\\\'bar\\\\'}\")\n                        .type(\"extract_json\")\n                        .variable(\"myVariable\")\n                        .build())\n                    .validations(SyntheticsCreateApiCheckV2TestRequestValidationArgs.builder()\n                        .actual(\"{{response.code}}\")\n                        .comparator(\"equals\")\n                        .expected(200)\n                        .name(\"My validation step\")\n                        .type(\"assert_numeric\")\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  apiV2FooCheck:\n    type: synthetics:SyntheticsCreateApiCheckV2\n    properties:\n      tests:\n        - active: true\n          deviceId: 1\n          frequency: 5\n          locationIds:\n            - aws-us-east-1\n          name: Terraform - Api V2 Checkaroo\n          schedulingStrategy: round_robin\n          requests:\n            - configurations:\n                - body: |\n                    \\'{\"alert_name\":\"the service is down\",\"url\":\"https://foo.com/bar\"}\\'\n                  headers:\n                    Accept: application/json\n                    x-foo: bar\n                  name: Get products\n                  requestMethod: GET\n                  url: https://dummyjson.com/products\n              setups:\n                - extractor: $.foo\n                  name: First setup step\n                  source: '{\\''foo\\'': \\''bar\\''}'\n                  type: extract_json\n                  variable: myVariable\n              validations:\n                - actual: '{{response.code}}'\n                  comparator: equals\n                  expected: 200\n                  name: My validation step\n                  type: assert_numeric\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2Test:SyntheticsCreateApiCheckV2Test"
                    }
                }
            },
            "required": [
                "tests"
            ],
            "inputProperties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2Test:SyntheticsCreateApiCheckV2Test"
                    }
                }
            },
            "requiredInputs": [
                "tests"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateApiCheckV2 resources.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateApiCheckV2Test:SyntheticsCreateApiCheckV2Test"
                        }
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateBrowserCheck:SyntheticsCreateBrowserCheck": {
            "description": "**Note**: This is a Rigor (Legacy) resource\n",
            "properties": {
                "autoRetry": {
                    "type": "boolean"
                },
                "autoUpdateUserAgent": {
                    "type": "boolean"
                },
                "blackoutPeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBlackoutPeriod:SyntheticsCreateBrowserCheckBlackoutPeriod"
                    }
                },
                "browsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBrowser:SyntheticsCreateBrowserCheckBrowser"
                    }
                },
                "checkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCheckConnection:SyntheticsCreateBrowserCheckCheckConnection"
                    }
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCookie:SyntheticsCreateBrowserCheckCookie"
                    }
                },
                "dnsOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckDnsOverride:SyntheticsCreateBrowserCheckDnsOverride"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforceSslValidation": {
                    "type": "boolean"
                },
                "excludedFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckExcludedFile:SyntheticsCreateBrowserCheckExcludedFile"
                    }
                },
                "frequency": {
                    "type": "integer"
                },
                "httpMethod": {
                    "type": "string"
                },
                "httpRequestBody": {
                    "type": "string"
                },
                "httpRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckHttpRequestHeader:SyntheticsCreateBrowserCheckHttpRequestHeader"
                    }
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "javascriptFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckJavascriptFile:SyntheticsCreateBrowserCheckJavascriptFile"
                    }
                },
                "lastUpdated": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotification:SyntheticsCreateBrowserCheckNotification"
                    }
                },
                "roundRobin": {
                    "type": "boolean"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckStep:SyntheticsCreateBrowserCheckStep"
                    }
                },
                "successCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckSuccessCriteria:SyntheticsCreateBrowserCheckSuccessCriteria"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thresholdMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckThresholdMonitor:SyntheticsCreateBrowserCheckThresholdMonitor"
                    }
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "string"
                },
                "viewports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckViewport:SyntheticsCreateBrowserCheckViewport"
                    }
                },
                "waitForFullMetrics": {
                    "type": "boolean"
                }
            },
            "required": [
                "frequency",
                "lastUpdated",
                "name",
                "url"
            ],
            "inputProperties": {
                "autoRetry": {
                    "type": "boolean"
                },
                "autoUpdateUserAgent": {
                    "type": "boolean"
                },
                "blackoutPeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBlackoutPeriod:SyntheticsCreateBrowserCheckBlackoutPeriod"
                    }
                },
                "browsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBrowser:SyntheticsCreateBrowserCheckBrowser"
                    }
                },
                "checkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCheckConnection:SyntheticsCreateBrowserCheckCheckConnection"
                    }
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCookie:SyntheticsCreateBrowserCheckCookie"
                    }
                },
                "dnsOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckDnsOverride:SyntheticsCreateBrowserCheckDnsOverride"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "enforceSslValidation": {
                    "type": "boolean"
                },
                "excludedFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckExcludedFile:SyntheticsCreateBrowserCheckExcludedFile"
                    }
                },
                "frequency": {
                    "type": "integer"
                },
                "httpMethod": {
                    "type": "string"
                },
                "httpRequestBody": {
                    "type": "string"
                },
                "httpRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckHttpRequestHeader:SyntheticsCreateBrowserCheckHttpRequestHeader"
                    }
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "javascriptFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckJavascriptFile:SyntheticsCreateBrowserCheckJavascriptFile"
                    }
                },
                "lastUpdated": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotification:SyntheticsCreateBrowserCheckNotification"
                    }
                },
                "roundRobin": {
                    "type": "boolean"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckStep:SyntheticsCreateBrowserCheckStep"
                    }
                },
                "successCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckSuccessCriteria:SyntheticsCreateBrowserCheckSuccessCriteria"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thresholdMonitors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckThresholdMonitor:SyntheticsCreateBrowserCheckThresholdMonitor"
                    }
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "string"
                },
                "viewports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckViewport:SyntheticsCreateBrowserCheckViewport"
                    }
                },
                "waitForFullMetrics": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "frequency",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateBrowserCheck resources.\n",
                "properties": {
                    "autoRetry": {
                        "type": "boolean"
                    },
                    "autoUpdateUserAgent": {
                        "type": "boolean"
                    },
                    "blackoutPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBlackoutPeriod:SyntheticsCreateBrowserCheckBlackoutPeriod"
                        }
                    },
                    "browsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckBrowser:SyntheticsCreateBrowserCheckBrowser"
                        }
                    },
                    "checkConnections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCheckConnection:SyntheticsCreateBrowserCheckCheckConnection"
                        }
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckCookie:SyntheticsCreateBrowserCheckCookie"
                        }
                    },
                    "dnsOverrides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckDnsOverride:SyntheticsCreateBrowserCheckDnsOverride"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "enforceSslValidation": {
                        "type": "boolean"
                    },
                    "excludedFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckExcludedFile:SyntheticsCreateBrowserCheckExcludedFile"
                        }
                    },
                    "frequency": {
                        "type": "integer"
                    },
                    "httpMethod": {
                        "type": "string"
                    },
                    "httpRequestBody": {
                        "type": "string"
                    },
                    "httpRequestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckHttpRequestHeader:SyntheticsCreateBrowserCheckHttpRequestHeader"
                        }
                    },
                    "integrations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "javascriptFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckJavascriptFile:SyntheticsCreateBrowserCheckJavascriptFile"
                        }
                    },
                    "lastUpdated": {
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckNotification:SyntheticsCreateBrowserCheckNotification"
                        }
                    },
                    "roundRobin": {
                        "type": "boolean"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckStep:SyntheticsCreateBrowserCheckStep"
                        }
                    },
                    "successCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckSuccessCriteria:SyntheticsCreateBrowserCheckSuccessCriteria"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thresholdMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckThresholdMonitor:SyntheticsCreateBrowserCheckThresholdMonitor"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "userAgent": {
                        "type": "string"
                    },
                    "viewports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckViewport:SyntheticsCreateBrowserCheckViewport"
                        }
                    },
                    "waitForFullMetrics": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateBrowserCheckV2:SyntheticsCreateBrowserCheckV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreateBrowserCheckV2;\nimport com.pulumi.synthetics.SyntheticsCreateBrowserCheckV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreateBrowserCheckV2TestArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var browserV2FooCheck = new SyntheticsCreateBrowserCheckV2(\"browserV2FooCheck\", SyntheticsCreateBrowserCheckV2Args.builder()        \n            .tests(SyntheticsCreateBrowserCheckV2TestArgs.builder()\n                .active(true)\n                .advancedSettings(SyntheticsCreateBrowserCheckV2TestAdvancedSettingArgs.builder()\n                    .authentication(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                    .cookies(                    \n                        SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookieArgs.builder()\n                            .domain(\"asd.com\")\n                            .key(\"sda\")\n                            .path(\"/asd\")\n                            .value(\"sda\")\n                            .build(),\n                        SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookieArgs.builder()\n                            .domain(\"zodiak.com\")\n                            .key(\"yes\")\n                            .path(\"/Edlesley\")\n                            .value(\"no\")\n                            .build())\n                    .headers(SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeaderArgs.builder()\n                        .domain(\"asdasd.batman.com\")\n                        .name(\"superstar-machine\")\n                        .value(\"\\\"taking it too the staaaaars\\\"\")\n                        .build())\n                    .hostOverrides(                    \n                        SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverrideArgs.builder()\n                            .keepHostHeader(false)\n                            .source(\"asdasd.com\")\n                            .target(\"whost.com\")\n                            .build(),\n                        SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverrideArgs.builder()\n                            .keepHostHeader(true)\n                            .source(\"92.2.2.2\")\n                            .target(\"91.1.1.1\")\n                            .build())\n                    .userAgent(\"Mozilla/5.0 (X11; Linux x86_64; Splunk Synthetics) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36\")\n                    .verifyCertificates(false)\n                    .build())\n                .deviceId(1)\n                .frequency(15)\n                .locationIds(\"aws-us-east-1\")\n                .name(\"Terraform - Browser V2 Checkaroo\")\n                .schedulingStrategy(\"round_robin\")\n                .startUrl(\"www.splunk.com\")\n                .transactions(                \n                    SyntheticsCreateBrowserCheckV2TestTransactionArgs.builder()\n                        .name(\"First Synthetic transaction\")\n                        .steps(                        \n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"01 Go to URL\")\n                                .type(\"go_to_url\")\n                                .url(\"https://www.splunk.com\")\n                                .waitForNav(true)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"02 fill in fieldz\")\n                                .selector(\"beep\")\n                                .selectorType(\"id\")\n                                .type(\"enter_value\")\n                                .value(\"{{env.beep-var}}\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"03 click\")\n                                .selector(\"clicky\")\n                                .selectorType(\"id\")\n                                .type(\"click_element\")\n                                .waitForNav(true)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"04 accept---Alert\")\n                                .type(\"accept_alert\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"05 Select-val-text\")\n                                .optionSelector(\"sdad\")\n                                .optionSelectorType(\"text\")\n                                .selector(\"textzz\")\n                                .selectorType(\"id\")\n                                .type(\"select_option\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"06 Select-Val-Val\")\n                                .optionSelector(\"{{env.beep-var}}\")\n                                .optionSelectorType(\"value\")\n                                .selector(\"valz\")\n                                .selectorType(\"id\")\n                                .type(\"select_option\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"07 Select-Val-Index\")\n                                .optionSelector(\"{{env.beep-var}}\")\n                                .optionSelectorType(\"index\")\n                                .selector(\"selectionz\")\n                                .selectorType(\"id\")\n                                .type(\"select_option\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"08 Save as text\")\n                                .selector(\"beepval\")\n                                .selectorType(\"link\")\n                                .type(\"store_variable_from_element\")\n                                .variableName(\"{{env.terraform-test-foo-301}}\")\n                                .waitForNav(false)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"09 Save JS2 return Val\")\n                                .type(\"store_variable_from_javascript\")\n                                .value(\"sdasds\")\n                                .variableName(\"{{env.terraform-test-foo-301}}\")\n                                .waitForNav(true)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"010 Run JS\")\n                                .type(\"run_javascript\")\n                                .value(\"beeeeeeep\")\n                                .waitForNav(true)\n                                .build())\n                        .build(),\n                    SyntheticsCreateBrowserCheckV2TestTransactionArgs.builder()\n                        .name(\"2nd Synthetic transaction\")\n                        .steps(                        \n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"Go to other URL\")\n                                .type(\"go_to_url\")\n                                .url(\"https://www.splunk.com\")\n                                .waitForNav(true)\n                                .build(),\n                            SyntheticsCreateBrowserCheckV2TestTransactionStepArgs.builder()\n                                .name(\"fill in more fields field\")\n                                .selector(\"beep\")\n                                .selectorType(\"id\")\n                                .type(\"enter_value\")\n                                .value(\"{{env.beep-var}}\")\n                                .waitForNav(false)\n                                .build())\n                        .build())\n                .urlProtocol(\"https://\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  browserV2FooCheck:\n    type: synthetics:SyntheticsCreateBrowserCheckV2\n    properties:\n      tests:\n        - active: true\n          advancedSettings:\n            - authentication:\n                - password: '{{env.beep-var}}'\n                  username: batmab\n              cookies:\n                - domain: asd.com\n                  key: sda\n                  path: /asd\n                  value: sda\n                - domain: zodiak.com\n                  key: yes\n                  path: /Edlesley\n                  value: no\n              headers:\n                - domain: asdasd.batman.com\n                  name: superstar-machine\n                  value: '\"taking it too the staaaaars\"'\n              hostOverrides:\n                - keepHostHeader: false\n                  source: asdasd.com\n                  target: whost.com\n                - keepHostHeader: true\n                  source: 92.2.2.2\n                  target: 91.1.1.1\n              userAgent: Mozilla/5.0 (X11; Linux x86_64; Splunk Synthetics) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36\n              verifyCertificates: false\n          deviceId: 1\n          frequency: 15\n          locationIds:\n            - aws-us-east-1\n          name: Terraform - Browser V2 Checkaroo\n          schedulingStrategy: round_robin\n          startUrl: www.splunk.com\n          transactions:\n            - name: First Synthetic transaction\n              steps:\n                - name: 01 Go to URL\n                  type: go_to_url\n                  url: https://www.splunk.com\n                  waitForNav: true\n                - name: 02 fill in fieldz\n                  selector: beep\n                  selectorType: id\n                  type: enter_value\n                  value: '{{env.beep-var}}'\n                  waitForNav: false\n                - name: 03 click\n                  selector: clicky\n                  selectorType: id\n                  type: click_element\n                  waitForNav: true\n                - name: 04 accept---Alert\n                  type: accept_alert\n                  waitForNav: false\n                - name: 05 Select-val-text\n                  optionSelector: sdad\n                  optionSelectorType: text\n                  selector: textzz\n                  selectorType: id\n                  type: select_option\n                  waitForNav: false\n                - name: 06 Select-Val-Val\n                  optionSelector: '{{env.beep-var}}'\n                  optionSelectorType: value\n                  selector: valz\n                  selectorType: id\n                  type: select_option\n                  waitForNav: false\n                - name: 07 Select-Val-Index\n                  optionSelector: '{{env.beep-var}}'\n                  optionSelectorType: index\n                  selector: selectionz\n                  selectorType: id\n                  type: select_option\n                  waitForNav: false\n                - name: 08 Save as text\n                  selector: beepval\n                  selectorType: link\n                  type: store_variable_from_element\n                  variableName: '{{env.terraform-test-foo-301}}'\n                  waitForNav: false\n                - name: 09 Save JS2 return Val\n                  type: store_variable_from_javascript\n                  value: sdasds\n                  variableName: '{{env.terraform-test-foo-301}}'\n                  waitForNav: true\n                - name: 010 Run JS\n                  type: run_javascript\n                  value: beeeeeeep\n                  waitForNav: true\n            - name: 2nd Synthetic transaction\n              steps:\n                - name: Go to other URL\n                  type: go_to_url\n                  url: https://www.splunk.com\n                  waitForNav: true\n                - name: fill in more fields field\n                  selector: beep\n                  selectorType: id\n                  type: enter_value\n                  value: '{{env.beep-var}}'\n                  waitForNav: false\n          urlProtocol: https://\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2Test:SyntheticsCreateBrowserCheckV2Test"
                    }
                }
            },
            "required": [
                "tests"
            ],
            "inputProperties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2Test:SyntheticsCreateBrowserCheckV2Test"
                    }
                }
            },
            "requiredInputs": [
                "tests"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateBrowserCheckV2 resources.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateBrowserCheckV2Test:SyntheticsCreateBrowserCheckV2Test"
                        }
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateHttpCheck:SyntheticsCreateHttpCheck": {
            "description": "**Note**: This is a Rigor (Legacy) resource\n",
            "properties": {
                "autoRetry": {
                    "type": "boolean"
                },
                "blackoutPeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckBlackoutPeriod:SyntheticsCreateHttpCheckBlackoutPeriod"
                    }
                },
                "checkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckCheckConnection:SyntheticsCreateHttpCheckCheckConnection"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "frequency": {
                    "type": "integer"
                },
                "httpMethod": {
                    "type": "string"
                },
                "httpRequestBody": {
                    "type": "string"
                },
                "httpRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckHttpRequestHeader:SyntheticsCreateHttpCheckHttpRequestHeader"
                    }
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lastUpdated": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotification:SyntheticsCreateHttpCheckNotification"
                    }
                },
                "roundRobin": {
                    "type": "boolean"
                },
                "successCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckSuccessCriteria:SyntheticsCreateHttpCheckSuccessCriteria"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "frequency",
                "lastUpdated",
                "name",
                "url"
            ],
            "inputProperties": {
                "autoRetry": {
                    "type": "boolean"
                },
                "blackoutPeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckBlackoutPeriod:SyntheticsCreateHttpCheckBlackoutPeriod"
                    }
                },
                "checkConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckCheckConnection:SyntheticsCreateHttpCheckCheckConnection"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "frequency": {
                    "type": "integer"
                },
                "httpMethod": {
                    "type": "string"
                },
                "httpRequestBody": {
                    "type": "string"
                },
                "httpRequestHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckHttpRequestHeader:SyntheticsCreateHttpCheckHttpRequestHeader"
                    }
                },
                "integrations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lastUpdated": {
                    "type": "string"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotification:SyntheticsCreateHttpCheckNotification"
                    }
                },
                "roundRobin": {
                    "type": "boolean"
                },
                "successCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckSuccessCriteria:SyntheticsCreateHttpCheckSuccessCriteria"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "frequency",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateHttpCheck resources.\n",
                "properties": {
                    "autoRetry": {
                        "type": "boolean"
                    },
                    "blackoutPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckBlackoutPeriod:SyntheticsCreateHttpCheckBlackoutPeriod"
                        }
                    },
                    "checkConnections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckCheckConnection:SyntheticsCreateHttpCheckCheckConnection"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "frequency": {
                        "type": "integer"
                    },
                    "httpMethod": {
                        "type": "string"
                    },
                    "httpRequestBody": {
                        "type": "string"
                    },
                    "httpRequestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckHttpRequestHeader:SyntheticsCreateHttpCheckHttpRequestHeader"
                        }
                    },
                    "integrations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "lastUpdated": {
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckNotification:SyntheticsCreateHttpCheckNotification"
                        }
                    },
                    "roundRobin": {
                        "type": "boolean"
                    },
                    "successCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckSuccessCriteria:SyntheticsCreateHttpCheckSuccessCriteria"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateHttpCheckV2:SyntheticsCreateHttpCheckV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst httpV2FooCheck = new synthetics.SyntheticsCreateHttpCheckV2(\"httpV2FooCheck\", {tests: [{\n    active: true,\n    frequency: 5,\n    locationIds: [\n        \"aws-us-east-1\",\n        \"aws-ap-northeast-3\",\n    ],\n    name: \"Terraform - HTTP V2 Checkaroo\",\n    type: \"http\",\n    url: \"https://www.splunk.com\",\n    schedulingStrategy: \"round_robin\",\n    requestMethod: \"GET\",\n    body: undefined,\n    headers: [\n        {\n            name: \"Synthetic_transaction_1\",\n            value: \"batman is the man\",\n        },\n        {\n            name: \"back_transaction_1\",\n            value: \"peeko\",\n        },\n    ],\n}]});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\nhttp_v2_foo_check = synthetics.SyntheticsCreateHttpCheckV2(\"httpV2FooCheck\", tests=[synthetics.SyntheticsCreateHttpCheckV2TestArgs(\n    active=True,\n    frequency=5,\n    location_ids=[\n        \"aws-us-east-1\",\n        \"aws-ap-northeast-3\",\n    ],\n    name=\"Terraform - HTTP V2 Checkaroo\",\n    type=\"http\",\n    url=\"https://www.splunk.com\",\n    scheduling_strategy=\"round_robin\",\n    request_method=\"GET\",\n    body=None,\n    headers=[\n        synthetics.SyntheticsCreateHttpCheckV2TestHeaderArgs(\n            name=\"Synthetic_transaction_1\",\n            value=\"batman is the man\",\n        ),\n        synthetics.SyntheticsCreateHttpCheckV2TestHeaderArgs(\n            name=\"back_transaction_1\",\n            value=\"peeko\",\n        ),\n    ],\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpV2FooCheck = new Synthetics.SyntheticsCreateHttpCheckV2(\"httpV2FooCheck\", new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestArgs\n            {\n                Active = true,\n                Frequency = 5,\n                LocationIds = new[]\n                {\n                    \"aws-us-east-1\",\n                    \"aws-ap-northeast-3\",\n                },\n                Name = \"Terraform - HTTP V2 Checkaroo\",\n                Type = \"http\",\n                Url = \"https://www.splunk.com\",\n                SchedulingStrategy = \"round_robin\",\n                RequestMethod = \"GET\",\n                Body = null,\n                Headers = new[]\n                {\n                    new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestHeaderArgs\n                    {\n                        Name = \"Synthetic_transaction_1\",\n                        Value = \"batman is the man\",\n                    },\n                    new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestHeaderArgs\n                    {\n                        Name = \"back_transaction_1\",\n                        Value = \"peeko\",\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.NewSyntheticsCreateHttpCheckV2(ctx, \"httpV2FooCheck\", \u0026synthetics.SyntheticsCreateHttpCheckV2Args{\n\t\t\tTests: synthetics.SyntheticsCreateHttpCheckV2TestArray{\n\t\t\t\t\u0026synthetics.SyntheticsCreateHttpCheckV2TestArgs{\n\t\t\t\t\tActive:    pulumi.Bool(true),\n\t\t\t\t\tFrequency: pulumi.Int(5),\n\t\t\t\t\tLocationIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"aws-us-east-1\"),\n\t\t\t\t\t\tpulumi.String(\"aws-ap-northeast-3\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:               pulumi.String(\"Terraform - HTTP V2 Checkaroo\"),\n\t\t\t\t\tType:               pulumi.String(\"http\"),\n\t\t\t\t\tUrl:                pulumi.String(\"https://www.splunk.com\"),\n\t\t\t\t\tSchedulingStrategy: pulumi.String(\"round_robin\"),\n\t\t\t\t\tRequestMethod:      pulumi.String(\"GET\"),\n\t\t\t\t\tBody:               nil,\n\t\t\t\t\tHeaders: synthetics.SyntheticsCreateHttpCheckV2TestHeaderArray{\n\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateHttpCheckV2TestHeaderArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"Synthetic_transaction_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"batman is the man\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026synthetics.SyntheticsCreateHttpCheckV2TestHeaderArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"back_transaction_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"peeko\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreateHttpCheckV2;\nimport com.pulumi.synthetics.SyntheticsCreateHttpCheckV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreateHttpCheckV2TestArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpV2FooCheck = new SyntheticsCreateHttpCheckV2(\"httpV2FooCheck\", SyntheticsCreateHttpCheckV2Args.builder()        \n            .tests(SyntheticsCreateHttpCheckV2TestArgs.builder()\n                .active(true)\n                .frequency(5)\n                .locationIds(                \n                    \"aws-us-east-1\",\n                    \"aws-ap-northeast-3\")\n                .name(\"Terraform - HTTP V2 Checkaroo\")\n                .type(\"http\")\n                .url(\"https://www.splunk.com\")\n                .schedulingStrategy(\"round_robin\")\n                .requestMethod(\"GET\")\n                .body(null)\n                .headers(                \n                    SyntheticsCreateHttpCheckV2TestHeaderArgs.builder()\n                        .name(\"Synthetic_transaction_1\")\n                        .value(\"batman is the man\")\n                        .build(),\n                    SyntheticsCreateHttpCheckV2TestHeaderArgs.builder()\n                        .name(\"back_transaction_1\")\n                        .value(\"peeko\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpV2FooCheck:\n    type: synthetics:SyntheticsCreateHttpCheckV2\n    properties:\n      tests:\n        - active: true\n          frequency: 5\n          locationIds:\n            - aws-us-east-1\n            - aws-ap-northeast-3\n          name: Terraform - HTTP V2 Checkaroo\n          type: http\n          url: https://www.splunk.com\n          schedulingStrategy: round_robin\n          requestMethod: GET\n          body: null\n          headers:\n            - name: Synthetic_transaction_1\n              value: batman is the man\n            - name: back_transaction_1\n              value: peeko\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckV2Test:SyntheticsCreateHttpCheckV2Test"
                    }
                }
            },
            "required": [
                "tests"
            ],
            "inputProperties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckV2Test:SyntheticsCreateHttpCheckV2Test"
                    }
                }
            },
            "requiredInputs": [
                "tests"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateHttpCheckV2 resources.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateHttpCheckV2Test:SyntheticsCreateHttpCheckV2Test"
                        }
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateLocationV2:SyntheticsCreateLocationV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst locationV2Foo = new synthetics.SyntheticsCreateLocationV2(\"locationV2Foo\", {locations: [{\n    country: \"IE\",\n    id: \"private-aws-awesome-east\",\n    label: \"awesome aws east location\",\n}]});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\nlocation_v2_foo = synthetics.SyntheticsCreateLocationV2(\"locationV2Foo\", locations=[synthetics.SyntheticsCreateLocationV2LocationArgs(\n    country=\"IE\",\n    id=\"private-aws-awesome-east\",\n    label=\"awesome aws east location\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var locationV2Foo = new Synthetics.SyntheticsCreateLocationV2(\"locationV2Foo\", new()\n    {\n        Locations = new[]\n        {\n            new Synthetics.Inputs.SyntheticsCreateLocationV2LocationArgs\n            {\n                Country = \"IE\",\n                Id = \"private-aws-awesome-east\",\n                Label = \"awesome aws east location\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.NewSyntheticsCreateLocationV2(ctx, \"locationV2Foo\", \u0026synthetics.SyntheticsCreateLocationV2Args{\n\t\t\tLocations: synthetics.SyntheticsCreateLocationV2LocationArray{\n\t\t\t\t\u0026synthetics.SyntheticsCreateLocationV2LocationArgs{\n\t\t\t\t\tCountry: pulumi.String(\"IE\"),\n\t\t\t\t\tId:      pulumi.String(\"private-aws-awesome-east\"),\n\t\t\t\t\tLabel:   pulumi.String(\"awesome aws east location\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreateLocationV2;\nimport com.pulumi.synthetics.SyntheticsCreateLocationV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreateLocationV2LocationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var locationV2Foo = new SyntheticsCreateLocationV2(\"locationV2Foo\", SyntheticsCreateLocationV2Args.builder()        \n            .locations(SyntheticsCreateLocationV2LocationArgs.builder()\n                .country(\"IE\")\n                .id(\"private-aws-awesome-east\")\n                .label(\"awesome aws east location\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  locationV2Foo:\n    type: synthetics:SyntheticsCreateLocationV2\n    properties:\n      locations:\n        - country: IE\n          id: private-aws-awesome-east\n          label: awesome aws east location\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateLocationV2Location:SyntheticsCreateLocationV2Location"
                    }
                }
            },
            "required": [
                "locations"
            ],
            "inputProperties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateLocationV2Location:SyntheticsCreateLocationV2Location"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "locations"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateLocationV2 resources.\n",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateLocationV2Location:SyntheticsCreateLocationV2Location"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreatePortCheckV2:SyntheticsCreatePortCheckV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst portV2FooCheck = new synthetics.SyntheticsCreatePortCheckV2(\"portV2FooCheck\", {tests: [{\n    active: true,\n    frequency: 5,\n    host: \"www.splunk.com\",\n    locationIds: [\"aws-us-west-2\"],\n    name: \"Terraform - PORT V2 Checkaroo\",\n    port: 8080,\n    protocol: \"udp\",\n    schedulingStrategy: \"concurrent\",\n}]});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\nport_v2_foo_check = synthetics.SyntheticsCreatePortCheckV2(\"portV2FooCheck\", tests=[synthetics.SyntheticsCreatePortCheckV2TestArgs(\n    active=True,\n    frequency=5,\n    host=\"www.splunk.com\",\n    location_ids=[\"aws-us-west-2\"],\n    name=\"Terraform - PORT V2 Checkaroo\",\n    port=8080,\n    protocol=\"udp\",\n    scheduling_strategy=\"concurrent\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var portV2FooCheck = new Synthetics.SyntheticsCreatePortCheckV2(\"portV2FooCheck\", new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsCreatePortCheckV2TestArgs\n            {\n                Active = true,\n                Frequency = 5,\n                Host = \"www.splunk.com\",\n                LocationIds = new[]\n                {\n                    \"aws-us-west-2\",\n                },\n                Name = \"Terraform - PORT V2 Checkaroo\",\n                Port = 8080,\n                Protocol = \"udp\",\n                SchedulingStrategy = \"concurrent\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.NewSyntheticsCreatePortCheckV2(ctx, \"portV2FooCheck\", \u0026synthetics.SyntheticsCreatePortCheckV2Args{\n\t\t\tTests: synthetics.SyntheticsCreatePortCheckV2TestArray{\n\t\t\t\t\u0026synthetics.SyntheticsCreatePortCheckV2TestArgs{\n\t\t\t\t\tActive:    pulumi.Bool(true),\n\t\t\t\t\tFrequency: pulumi.Int(5),\n\t\t\t\t\tHost:      pulumi.String(\"www.splunk.com\"),\n\t\t\t\t\tLocationIds: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"aws-us-west-2\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:               pulumi.String(\"Terraform - PORT V2 Checkaroo\"),\n\t\t\t\t\tPort:               pulumi.Int(8080),\n\t\t\t\t\tProtocol:           pulumi.String(\"udp\"),\n\t\t\t\t\tSchedulingStrategy: pulumi.String(\"concurrent\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreatePortCheckV2;\nimport com.pulumi.synthetics.SyntheticsCreatePortCheckV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreatePortCheckV2TestArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var portV2FooCheck = new SyntheticsCreatePortCheckV2(\"portV2FooCheck\", SyntheticsCreatePortCheckV2Args.builder()        \n            .tests(SyntheticsCreatePortCheckV2TestArgs.builder()\n                .active(true)\n                .frequency(5)\n                .host(\"www.splunk.com\")\n                .locationIds(\"aws-us-west-2\")\n                .name(\"Terraform - PORT V2 Checkaroo\")\n                .port(8080)\n                .protocol(\"udp\")\n                .schedulingStrategy(\"concurrent\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  portV2FooCheck:\n    type: synthetics:SyntheticsCreatePortCheckV2\n    properties:\n      tests:\n        - active: true\n          frequency: 5\n          host: www.splunk.com\n          locationIds:\n            - aws-us-west-2\n          name: Terraform - PORT V2 Checkaroo\n          port: 8080\n          protocol: udp\n          schedulingStrategy: concurrent\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreatePortCheckV2Test:SyntheticsCreatePortCheckV2Test"
                    }
                }
            },
            "required": [
                "tests"
            ],
            "inputProperties": {
                "tests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreatePortCheckV2Test:SyntheticsCreatePortCheckV2Test"
                    }
                }
            },
            "requiredInputs": [
                "tests"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreatePortCheckV2 resources.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreatePortCheckV2Test:SyntheticsCreatePortCheckV2Test"
                        }
                    }
                },
                "type": "object"
            }
        },
        "synthetics:index/syntheticsCreateVariableV2:SyntheticsCreateVariableV2": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst variableV2Foo = new synthetics.SyntheticsCreateVariableV2(\"variableV2Foo\", {variables: [{\n    description: \"The most awesome variable. Full of snakes.\",\n    name: \"terraform-test121\",\n    secret: false,\n    value: \"barv3--oopsasdasd\",\n}]});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\nvariable_v2_foo = synthetics.SyntheticsCreateVariableV2(\"variableV2Foo\", variables=[synthetics.SyntheticsCreateVariableV2VariableArgs(\n    description=\"The most awesome variable. Full of snakes.\",\n    name=\"terraform-test121\",\n    secret=False,\n    value=\"barv3--oopsasdasd\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var variableV2Foo = new Synthetics.SyntheticsCreateVariableV2(\"variableV2Foo\", new()\n    {\n        Variables = new[]\n        {\n            new Synthetics.Inputs.SyntheticsCreateVariableV2VariableArgs\n            {\n                Description = \"The most awesome variable. Full of snakes.\",\n                Name = \"terraform-test121\",\n                Secret = false,\n                Value = \"barv3--oopsasdasd\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.NewSyntheticsCreateVariableV2(ctx, \"variableV2Foo\", \u0026synthetics.SyntheticsCreateVariableV2Args{\n\t\t\tVariables: synthetics.SyntheticsCreateVariableV2VariableArray{\n\t\t\t\t\u0026synthetics.SyntheticsCreateVariableV2VariableArgs{\n\t\t\t\t\tDescription: pulumi.String(\"The most awesome variable. Full of snakes.\"),\n\t\t\t\t\tName:        pulumi.String(\"terraform-test121\"),\n\t\t\t\t\tSecret:      pulumi.Bool(false),\n\t\t\t\t\tValue:       pulumi.String(\"barv3--oopsasdasd\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsCreateVariableV2;\nimport com.pulumi.synthetics.SyntheticsCreateVariableV2Args;\nimport com.pulumi.synthetics.inputs.SyntheticsCreateVariableV2VariableArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var variableV2Foo = new SyntheticsCreateVariableV2(\"variableV2Foo\", SyntheticsCreateVariableV2Args.builder()        \n            .variables(SyntheticsCreateVariableV2VariableArgs.builder()\n                .description(\"The most awesome variable. Full of snakes.\")\n                .name(\"terraform-test121\")\n                .secret(false)\n                .value(\"barv3--oopsasdasd\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  variableV2Foo:\n    type: synthetics:SyntheticsCreateVariableV2\n    properties:\n      variables:\n        - description: The most awesome variable. Full of snakes.\n          name: terraform-test121\n          secret: false\n          value: barv3--oopsasdasd\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateVariableV2Variable:SyntheticsCreateVariableV2Variable"
                    }
                }
            },
            "required": [
                "variables"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/synthetics:index/SyntheticsCreateVariableV2Variable:SyntheticsCreateVariableV2Variable"
                    }
                }
            },
            "requiredInputs": [
                "variables"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsCreateVariableV2 resources.\n",
                "properties": {
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/SyntheticsCreateVariableV2Variable:SyntheticsCreateVariableV2Variable"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "synthetics:index/syntheticsApiV2Check:syntheticsApiV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceCheckApi = synthetics.syntheticsApiV2Check({\n    tests: [{\n        id: 489,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_check_api = synthetics.synthetics_api_v2_check(tests=[synthetics.SyntheticsApiV2CheckTestArgs(\n    id=489,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceCheckApi = Synthetics.SyntheticsApiV2Check.Invoke(new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsApiV2CheckTestInputArgs\n            {\n                Id = 489,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsApiV2Check(ctx, \u0026synthetics.SyntheticsApiV2CheckArgs{\n\t\t\tTests: []synthetics.SyntheticsApiV2CheckTest{\n\t\t\t\t{\n\t\t\t\t\tId: 489,\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsApiV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceCheckApi = SyntheticsFunctions.syntheticsApiV2Check(SyntheticsApiV2CheckArgs.builder()\n            .tests(SyntheticsApiV2CheckTestArgs.builder()\n                .id(489)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceCheckApi:\n    fn::invoke:\n      Function: synthetics:syntheticsApiV2Check\n      Arguments:\n        tests:\n          - id: 489\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsApiV2Check.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTest:syntheticsApiV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsApiV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsApiV2CheckTest:syntheticsApiV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsBrowserV2Check:syntheticsBrowserV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceCheckBrowser = synthetics.syntheticsBrowserV2Check({\n    tests: [{\n        id: 496,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_check_browser = synthetics.synthetics_browser_v2_check(tests=[synthetics.SyntheticsBrowserV2CheckTestArgs(\n    id=496,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceCheckBrowser = Synthetics.SyntheticsBrowserV2Check.Invoke(new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsBrowserV2CheckTestInputArgs\n            {\n                Id = 496,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsBrowserV2Check(ctx, \u0026synthetics.SyntheticsBrowserV2CheckArgs{\n\t\t\tTests: []synthetics.SyntheticsBrowserV2CheckTest{\n\t\t\t\t{\n\t\t\t\t\tId: 496,\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsBrowserV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceCheckBrowser = SyntheticsFunctions.syntheticsBrowserV2Check(SyntheticsBrowserV2CheckArgs.builder()\n            .tests(SyntheticsBrowserV2CheckTestArgs.builder()\n                .id(496)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceCheckBrowser:\n    fn::invoke:\n      Function: synthetics:syntheticsBrowserV2Check\n      Arguments:\n        tests:\n          - id: 496\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsBrowserV2Check.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTest:syntheticsBrowserV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsBrowserV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsBrowserV2CheckTest:syntheticsBrowserV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsCheck:syntheticsCheck": {
            "description": "**Note**: This is a Rigor (Legacy) data source\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsCheck.\n",
                "properties": {
                    "browsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckBrowser:syntheticsCheckBrowser"
                        }
                    },
                    "checkConnections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckCheckConnection:syntheticsCheckCheckConnection"
                        }
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckCookie:syntheticsCheckCookie"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dnsOverrides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckDnsOverride:syntheticsCheckDnsOverride"
                        }
                    },
                    "excludedFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckExcludedFile:syntheticsCheckExcludedFile"
                        }
                    },
                    "frequency": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "javascriptFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckJavascriptFile:syntheticsCheckJavascriptFile"
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckLink:syntheticsCheckLink"
                        }
                    },
                    "muted": {
                        "type": "boolean"
                    },
                    "paused": {
                        "type": "boolean"
                    },
                    "responseTimeMonitorMilliseconds": {
                        "type": "integer"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckStep:syntheticsCheckStep"
                        }
                    },
                    "thresholdMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckThresholdMonitor:syntheticsCheckThresholdMonitor"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "viewports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckViewport:syntheticsCheckViewport"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsCheck.\n",
                "properties": {
                    "autoRetry": {
                        "type": "boolean"
                    },
                    "blackoutPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckBlackoutPeriod:syntheticsCheckBlackoutPeriod"
                        }
                    },
                    "browsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckBrowser:syntheticsCheckBrowser"
                        }
                    },
                    "checkConnections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckCheckConnection:syntheticsCheckCheckConnection"
                        }
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckCookie:syntheticsCheckCookie"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dnsOverrides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckDnsOverride:syntheticsCheckDnsOverride"
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "excludedFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckExcludedFile:syntheticsCheckExcludedFile"
                        }
                    },
                    "frequency": {
                        "type": "integer"
                    },
                    "httpMethod": {
                        "type": "string"
                    },
                    "httpRequestBody": {
                        "type": "string"
                    },
                    "httpRequestHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckHttpRequestHeader:syntheticsCheckHttpRequestHeader"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "description": "The ID of this resource.\n"
                    },
                    "integrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckIntegration:syntheticsCheckIntegration"
                        }
                    },
                    "javascriptFiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckJavascriptFile:syntheticsCheckJavascriptFile"
                        }
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckLink:syntheticsCheckLink"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckLocation:syntheticsCheckLocation"
                        }
                    },
                    "muted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckNotification:syntheticsCheckNotification"
                        }
                    },
                    "paused": {
                        "type": "boolean"
                    },
                    "responseTimeMonitorMilliseconds": {
                        "type": "integer"
                    },
                    "roundRobin": {
                        "type": "boolean"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckStatus:syntheticsCheckStatus"
                        }
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckStep:syntheticsCheckStep"
                        }
                    },
                    "successCriterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckSuccessCriteria:syntheticsCheckSuccessCriteria"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckTag:syntheticsCheckTag"
                        }
                    },
                    "thresholdMonitors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckThresholdMonitor:syntheticsCheckThresholdMonitor"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "viewports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsCheckViewport:syntheticsCheckViewport"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "autoRetry",
                    "blackoutPeriods",
                    "checkConnections",
                    "createdAt",
                    "enabled",
                    "frequency",
                    "httpMethod",
                    "httpRequestBody",
                    "httpRequestHeaders",
                    "id",
                    "integrations",
                    "links",
                    "locations",
                    "muted",
                    "name",
                    "notifications",
                    "paused",
                    "responseTimeMonitorMilliseconds",
                    "roundRobin",
                    "statuses",
                    "successCriterias",
                    "tags",
                    "type",
                    "updatedAt",
                    "url"
                ]
            }
        },
        "synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceDevices = synthetics.syntheticsDevicesV2Check({\n    devices: [{}],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_devices = synthetics.synthetics_devices_v2_check(devices=[synthetics.SyntheticsDevicesV2CheckDeviceArgs()])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceDevices = Synthetics.SyntheticsDevicesV2Check.Invoke(new()\n    {\n        Devices = new[]\n        {\n            null,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsDevicesV2Check(ctx, \u0026synthetics.SyntheticsDevicesV2CheckArgs{\n\t\t\tDevices: []synthetics.SyntheticsDevicesV2CheckDevice{\n\t\t\t\tnil,\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsDevicesV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceDevices = SyntheticsFunctions.syntheticsDevicesV2Check(SyntheticsDevicesV2CheckArgs.builder()\n            .devices()\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceDevices:\n    fn::invoke:\n      Function: synthetics:syntheticsDevicesV2Check\n      Arguments:\n        devices:\n          - {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsDevicesV2Check.\n",
                "properties": {
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsDevicesV2CheckDevice:syntheticsDevicesV2CheckDevice"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsDevicesV2Check.\n",
                "properties": {
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsDevicesV2CheckDevice:syntheticsDevicesV2CheckDevice"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsHttpV2Check:syntheticsHttpV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceCheckHttp = synthetics.syntheticsHttpV2Check({\n    tests: [{\n        id: 490,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_check_http = synthetics.synthetics_http_v2_check(tests=[synthetics.SyntheticsHttpV2CheckTestArgs(\n    id=490,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceCheckHttp = Synthetics.SyntheticsHttpV2Check.Invoke(new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsHttpV2CheckTestInputArgs\n            {\n                Id = 490,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsHttpV2Check(ctx, \u0026synthetics.SyntheticsHttpV2CheckArgs{\n\t\t\tTests: []synthetics.SyntheticsHttpV2CheckTest{\n\t\t\t\t{\n\t\t\t\t\tId: 490,\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsHttpV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceCheckHttp = SyntheticsFunctions.syntheticsHttpV2Check(SyntheticsHttpV2CheckArgs.builder()\n            .tests(SyntheticsHttpV2CheckTestArgs.builder()\n                .id(490)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceCheckHttp:\n    fn::invoke:\n      Function: synthetics:syntheticsHttpV2Check\n      Arguments:\n        tests:\n          - id: 490\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsHttpV2Check.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsHttpV2CheckTest:syntheticsHttpV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsHttpV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsHttpV2CheckTest:syntheticsHttpV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsLocationV2Check:syntheticsLocationV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceLocation = synthetics.syntheticsLocationV2Check({\n    locations: [{\n        id: \"private-aws-awesome-east\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_location = synthetics.synthetics_location_v2_check(locations=[synthetics.SyntheticsLocationV2CheckLocationArgs(\n    id=\"private-aws-awesome-east\",\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceLocation = Synthetics.SyntheticsLocationV2Check.Invoke(new()\n    {\n        Locations = new[]\n        {\n            new Synthetics.Inputs.SyntheticsLocationV2CheckLocationInputArgs\n            {\n                Id = \"private-aws-awesome-east\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsLocationV2Check(ctx, \u0026synthetics.SyntheticsLocationV2CheckArgs{\n\t\t\tLocations: []synthetics.SyntheticsLocationV2CheckLocation{\n\t\t\t\t{\n\t\t\t\t\tId: \"private-aws-awesome-east\",\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsLocationV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceLocation = SyntheticsFunctions.syntheticsLocationV2Check(SyntheticsLocationV2CheckArgs.builder()\n            .locations(SyntheticsLocationV2CheckLocationArgs.builder()\n                .id(\"private-aws-awesome-east\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceLocation:\n    fn::invoke:\n      Function: synthetics:syntheticsLocationV2Check\n      Arguments:\n        locations:\n          - id: private-aws-awesome-east\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsLocationV2Check.\n",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationV2CheckLocation:syntheticsLocationV2CheckLocation"
                        }
                    },
                    "metas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationV2CheckMeta:syntheticsLocationV2CheckMeta"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "locations"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsLocationV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationV2CheckLocation:syntheticsLocationV2CheckLocation"
                        }
                    },
                    "metas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationV2CheckMeta:syntheticsLocationV2CheckMeta"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "locations",
                    "metas",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsLocationsV2Check:syntheticsLocationsV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceLocations = synthetics.syntheticsLocationsV2Check({\n    locations: [{}],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_locations = synthetics.synthetics_locations_v2_check(locations=[synthetics.SyntheticsLocationsV2CheckLocationArgs()])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceLocations = Synthetics.SyntheticsLocationsV2Check.Invoke(new()\n    {\n        Locations = new[]\n        {\n            null,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsLocationsV2Check(ctx, \u0026synthetics.SyntheticsLocationsV2CheckArgs{\n\t\t\tLocations: []synthetics.SyntheticsLocationsV2CheckLocation{\n\t\t\t\tnil,\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsLocationsV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceLocations = SyntheticsFunctions.syntheticsLocationsV2Check(SyntheticsLocationsV2CheckArgs.builder()\n            .locations()\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceLocations:\n    fn::invoke:\n      Function: synthetics:syntheticsLocationsV2Check\n      Arguments:\n        locations:\n          - {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsLocationsV2Check.\n",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationsV2CheckLocation:syntheticsLocationsV2CheckLocation"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsLocationsV2Check.\n",
                "properties": {
                    "defaultLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsLocationsV2CheckLocation:syntheticsLocationsV2CheckLocation"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "defaultLocationIds",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsPortV2Check:syntheticsPortV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceCheckPort = synthetics.syntheticsPortV2Check({\n    tests: [{\n        id: 1650,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_check_port = synthetics.synthetics_port_v2_check(tests=[synthetics.SyntheticsPortV2CheckTestArgs(\n    id=1650,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceCheckPort = Synthetics.SyntheticsPortV2Check.Invoke(new()\n    {\n        Tests = new[]\n        {\n            new Synthetics.Inputs.SyntheticsPortV2CheckTestInputArgs\n            {\n                Id = 1650,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsPortV2Check(ctx, \u0026synthetics.SyntheticsPortV2CheckArgs{\n\t\t\tTests: []synthetics.SyntheticsPortV2CheckTest{\n\t\t\t\t{\n\t\t\t\t\tId: 1650,\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsPortV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceCheckPort = SyntheticsFunctions.syntheticsPortV2Check(SyntheticsPortV2CheckArgs.builder()\n            .tests(SyntheticsPortV2CheckTestArgs.builder()\n                .id(1650)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceCheckPort:\n    fn::invoke:\n      Function: synthetics:syntheticsPortV2Check\n      Arguments:\n        tests:\n          - id: 1650\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsPortV2Check.\n",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsPortV2CheckTest:syntheticsPortV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsPortV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsPortV2CheckTest:syntheticsPortV2CheckTest"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "tests",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsVariableV2Check:syntheticsVariableV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceCheckVariable = synthetics.syntheticsVariableV2Check({\n    variables: [{\n        id: 246,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_check_variable = synthetics.synthetics_variable_v2_check(variables=[synthetics.SyntheticsVariableV2CheckVariableArgs(\n    id=246,\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceCheckVariable = Synthetics.SyntheticsVariableV2Check.Invoke(new()\n    {\n        Variables = new[]\n        {\n            new Synthetics.Inputs.SyntheticsVariableV2CheckVariableInputArgs\n            {\n                Id = 246,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsVariableV2Check(ctx, \u0026synthetics.SyntheticsVariableV2CheckArgs{\n\t\t\tVariables: []synthetics.SyntheticsVariableV2CheckVariable{\n\t\t\t\t{\n\t\t\t\t\tId: 246,\n\t\t\t\t},\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsVariableV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceCheckVariable = SyntheticsFunctions.syntheticsVariableV2Check(SyntheticsVariableV2CheckArgs.builder()\n            .variables(SyntheticsVariableV2CheckVariableArgs.builder()\n                .id(246)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceCheckVariable:\n    fn::invoke:\n      Function: synthetics:syntheticsVariableV2Check\n      Arguments:\n        variables:\n          - id: 246\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsVariableV2Check.\n",
                "properties": {
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsVariableV2CheckVariable:syntheticsVariableV2CheckVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "variables"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsVariableV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsVariableV2CheckVariable:syntheticsVariableV2CheckVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "variables",
                    "id"
                ]
            }
        },
        "synthetics:index/syntheticsVariablesV2Check:syntheticsVariablesV2Check": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as synthetics from \"@pulumi/synthetics\";\n\nconst datasourceVariables = synthetics.syntheticsVariablesV2Check({\n    variables: [{}],\n});\n```\n```python\nimport pulumi\nimport pulumi_synthetics as synthetics\n\ndatasource_variables = synthetics.synthetics_variables_v2_check(variables=[synthetics.SyntheticsVariablesV2CheckVariableArgs()])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Synthetics = Pulumi.Synthetics;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var datasourceVariables = Synthetics.SyntheticsVariablesV2Check.Invoke(new()\n    {\n        Variables = new[]\n        {\n            null,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := synthetics.SyntheticsVariablesV2Check(ctx, \u0026synthetics.SyntheticsVariablesV2CheckArgs{\n\t\t\tVariables: []synthetics.SyntheticsVariablesV2CheckVariable{\n\t\t\t\tnil,\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.synthetics.SyntheticsFunctions;\nimport com.pulumi.synthetics.inputs.SyntheticsVariablesV2CheckArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var datasourceVariables = SyntheticsFunctions.syntheticsVariablesV2Check(SyntheticsVariablesV2CheckArgs.builder()\n            .variables()\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  datasourceVariables:\n    fn::invoke:\n      Function: synthetics:syntheticsVariablesV2Check\n      Arguments:\n        variables:\n          - {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking syntheticsVariablesV2Check.\n",
                "properties": {
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsVariablesV2CheckVariable:syntheticsVariablesV2CheckVariable"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by syntheticsVariablesV2Check.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/synthetics:index/syntheticsVariablesV2CheckVariable:syntheticsVariablesV2CheckVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        }
    }
}