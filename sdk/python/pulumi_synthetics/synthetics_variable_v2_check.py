# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'SyntheticsVariableV2CheckResult',
    'AwaitableSyntheticsVariableV2CheckResult',
    'synthetics_variable_v2_check',
    'synthetics_variable_v2_check_output',
]

@pulumi.output_type
class SyntheticsVariableV2CheckResult:
    """
    A collection of values returned by syntheticsVariableV2Check.
    """
    def __init__(__self__, id=None, variables=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if variables and not isinstance(variables, list):
            raise TypeError("Expected argument 'variables' to be a list")
        pulumi.set(__self__, "variables", variables)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def variables(self) -> Sequence['outputs.SyntheticsVariableV2CheckVariableResult']:
        return pulumi.get(self, "variables")


class AwaitableSyntheticsVariableV2CheckResult(SyntheticsVariableV2CheckResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return SyntheticsVariableV2CheckResult(
            id=self.id,
            variables=self.variables)


def synthetics_variable_v2_check(variables: Optional[Sequence[pulumi.InputType['SyntheticsVariableV2CheckVariableArgs']]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableSyntheticsVariableV2CheckResult:
    """
    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_synthetics as synthetics

    datasource_check_variable = synthetics.synthetics_variable_v2_check(variables=[synthetics.SyntheticsVariableV2CheckVariableArgs(
        id=246,
    )])
    ```
    <!--End PulumiCodeChooser -->
    """
    __args__ = dict()
    __args__['variables'] = variables
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('synthetics:index/syntheticsVariableV2Check:syntheticsVariableV2Check', __args__, opts=opts, typ=SyntheticsVariableV2CheckResult).value

    return AwaitableSyntheticsVariableV2CheckResult(
        id=pulumi.get(__ret__, 'id'),
        variables=pulumi.get(__ret__, 'variables'))


@_utilities.lift_output_func(synthetics_variable_v2_check)
def synthetics_variable_v2_check_output(variables: Optional[pulumi.Input[Sequence[pulumi.InputType['SyntheticsVariableV2CheckVariableArgs']]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[SyntheticsVariableV2CheckResult]:
    """
    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_synthetics as synthetics

    datasource_check_variable = synthetics.synthetics_variable_v2_check(variables=[synthetics.SyntheticsVariableV2CheckVariableArgs(
        id=246,
    )])
    ```
    <!--End PulumiCodeChooser -->
    """
    ...
