# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'SyntheticsDevicesV2CheckResult',
    'AwaitableSyntheticsDevicesV2CheckResult',
    'synthetics_devices_v2_check',
    'synthetics_devices_v2_check_output',
]

@pulumi.output_type
class SyntheticsDevicesV2CheckResult:
    """
    A collection of values returned by syntheticsDevicesV2Check.
    """
    def __init__(__self__, devices=None, id=None):
        if devices and not isinstance(devices, list):
            raise TypeError("Expected argument 'devices' to be a list")
        pulumi.set(__self__, "devices", devices)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def devices(self) -> Optional[Sequence['outputs.SyntheticsDevicesV2CheckDeviceResult']]:
        return pulumi.get(self, "devices")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableSyntheticsDevicesV2CheckResult(SyntheticsDevicesV2CheckResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return SyntheticsDevicesV2CheckResult(
            devices=self.devices,
            id=self.id)


def synthetics_devices_v2_check(devices: Optional[Sequence[pulumi.InputType['SyntheticsDevicesV2CheckDeviceArgs']]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableSyntheticsDevicesV2CheckResult:
    """
    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_synthetics as synthetics

    datasource_devices = synthetics.synthetics_devices_v2_check(devices=[synthetics.SyntheticsDevicesV2CheckDeviceArgs()])
    ```
    <!--End PulumiCodeChooser -->
    """
    __args__ = dict()
    __args__['devices'] = devices
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check', __args__, opts=opts, typ=SyntheticsDevicesV2CheckResult).value

    return AwaitableSyntheticsDevicesV2CheckResult(
        devices=pulumi.get(__ret__, 'devices'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(synthetics_devices_v2_check)
def synthetics_devices_v2_check_output(devices: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['SyntheticsDevicesV2CheckDeviceArgs']]]]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[SyntheticsDevicesV2CheckResult]:
    """
    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_synthetics as synthetics

    datasource_devices = synthetics.synthetics_devices_v2_check(devices=[synthetics.SyntheticsDevicesV2CheckDeviceArgs()])
    ```
    <!--End PulumiCodeChooser -->
    """
    ...
