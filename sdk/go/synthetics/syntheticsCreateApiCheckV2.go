// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics/internal"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.NewSyntheticsCreateApiCheckV2(ctx, "apiV2FooCheck", &synthetics.SyntheticsCreateApiCheckV2Args{
//				Tests: synthetics.SyntheticsCreateApiCheckV2TestArray{
//					&synthetics.SyntheticsCreateApiCheckV2TestArgs{
//						Active:    pulumi.Bool(true),
//						DeviceId:  pulumi.Int(1),
//						Frequency: pulumi.Int(5),
//						LocationIds: pulumi.StringArray{
//							pulumi.String("aws-us-east-1"),
//						},
//						Name:               pulumi.String("Terraform - Api V2 Checkaroo"),
//						SchedulingStrategy: pulumi.String("round_robin"),
//						Requests: synthetics.SyntheticsCreateApiCheckV2TestRequestArray{
//							&synthetics.SyntheticsCreateApiCheckV2TestRequestArgs{
//								Configurations: synthetics.SyntheticsCreateApiCheckV2TestRequestConfigurationArray{
//									&synthetics.SyntheticsCreateApiCheckV2TestRequestConfigurationArgs{
//										Body: pulumi.String("\\'{\"alert_name\":\"the service is down\",\"url\":\"https://foo.com/bar\"}\\'\n"),
//										Headers: pulumi.StringMap{
//											"Accept": pulumi.String("application/json"),
//											"x-foo":  pulumi.String("bar"),
//										},
//										Name:          pulumi.String("Get products"),
//										RequestMethod: pulumi.String("GET"),
//										Url:           pulumi.String("https://dummyjson.com/products"),
//									},
//								},
//								Setups: synthetics.SyntheticsCreateApiCheckV2TestRequestSetupArray{
//									&synthetics.SyntheticsCreateApiCheckV2TestRequestSetupArgs{
//										Extractor: pulumi.String("$.foo"),
//										Name:      pulumi.String("First setup step"),
//										Source:    pulumi.String("{\\'foo\\': \\'bar\\'}"),
//										Type:      pulumi.String("extract_json"),
//										Variable:  pulumi.String("myVariable"),
//									},
//								},
//								Validations: synthetics.SyntheticsCreateApiCheckV2TestRequestValidationArray{
//									&synthetics.SyntheticsCreateApiCheckV2TestRequestValidationArgs{
//										Actual:     pulumi.String("{{response.code}}"),
//										Comparator: pulumi.String("equals"),
//										Expected:   pulumi.String("200"),
//										Name:       pulumi.String("My validation step"),
//										Type:       pulumi.String("assert_numeric"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type SyntheticsCreateApiCheckV2 struct {
	pulumi.CustomResourceState

	Tests SyntheticsCreateApiCheckV2TestArrayOutput `pulumi:"tests"`
}

// NewSyntheticsCreateApiCheckV2 registers a new resource with the given unique name, arguments, and options.
func NewSyntheticsCreateApiCheckV2(ctx *pulumi.Context,
	name string, args *SyntheticsCreateApiCheckV2Args, opts ...pulumi.ResourceOption) (*SyntheticsCreateApiCheckV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Tests == nil {
		return nil, errors.New("invalid value for required argument 'Tests'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyntheticsCreateApiCheckV2
	err := ctx.RegisterResource("synthetics:index/syntheticsCreateApiCheckV2:SyntheticsCreateApiCheckV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyntheticsCreateApiCheckV2 gets an existing SyntheticsCreateApiCheckV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyntheticsCreateApiCheckV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyntheticsCreateApiCheckV2State, opts ...pulumi.ResourceOption) (*SyntheticsCreateApiCheckV2, error) {
	var resource SyntheticsCreateApiCheckV2
	err := ctx.ReadResource("synthetics:index/syntheticsCreateApiCheckV2:SyntheticsCreateApiCheckV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyntheticsCreateApiCheckV2 resources.
type syntheticsCreateApiCheckV2State struct {
	Tests []SyntheticsCreateApiCheckV2Test `pulumi:"tests"`
}

type SyntheticsCreateApiCheckV2State struct {
	Tests SyntheticsCreateApiCheckV2TestArrayInput
}

func (SyntheticsCreateApiCheckV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateApiCheckV2State)(nil)).Elem()
}

type syntheticsCreateApiCheckV2Args struct {
	Tests []SyntheticsCreateApiCheckV2Test `pulumi:"tests"`
}

// The set of arguments for constructing a SyntheticsCreateApiCheckV2 resource.
type SyntheticsCreateApiCheckV2Args struct {
	Tests SyntheticsCreateApiCheckV2TestArrayInput
}

func (SyntheticsCreateApiCheckV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateApiCheckV2Args)(nil)).Elem()
}

type SyntheticsCreateApiCheckV2Input interface {
	pulumi.Input

	ToSyntheticsCreateApiCheckV2Output() SyntheticsCreateApiCheckV2Output
	ToSyntheticsCreateApiCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2Output
}

func (*SyntheticsCreateApiCheckV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (i *SyntheticsCreateApiCheckV2) ToSyntheticsCreateApiCheckV2Output() SyntheticsCreateApiCheckV2Output {
	return i.ToSyntheticsCreateApiCheckV2OutputWithContext(context.Background())
}

func (i *SyntheticsCreateApiCheckV2) ToSyntheticsCreateApiCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateApiCheckV2Output)
}

// SyntheticsCreateApiCheckV2ArrayInput is an input type that accepts SyntheticsCreateApiCheckV2Array and SyntheticsCreateApiCheckV2ArrayOutput values.
// You can construct a concrete instance of `SyntheticsCreateApiCheckV2ArrayInput` via:
//
//	SyntheticsCreateApiCheckV2Array{ SyntheticsCreateApiCheckV2Args{...} }
type SyntheticsCreateApiCheckV2ArrayInput interface {
	pulumi.Input

	ToSyntheticsCreateApiCheckV2ArrayOutput() SyntheticsCreateApiCheckV2ArrayOutput
	ToSyntheticsCreateApiCheckV2ArrayOutputWithContext(context.Context) SyntheticsCreateApiCheckV2ArrayOutput
}

type SyntheticsCreateApiCheckV2Array []SyntheticsCreateApiCheckV2Input

func (SyntheticsCreateApiCheckV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (i SyntheticsCreateApiCheckV2Array) ToSyntheticsCreateApiCheckV2ArrayOutput() SyntheticsCreateApiCheckV2ArrayOutput {
	return i.ToSyntheticsCreateApiCheckV2ArrayOutputWithContext(context.Background())
}

func (i SyntheticsCreateApiCheckV2Array) ToSyntheticsCreateApiCheckV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateApiCheckV2ArrayOutput)
}

// SyntheticsCreateApiCheckV2MapInput is an input type that accepts SyntheticsCreateApiCheckV2Map and SyntheticsCreateApiCheckV2MapOutput values.
// You can construct a concrete instance of `SyntheticsCreateApiCheckV2MapInput` via:
//
//	SyntheticsCreateApiCheckV2Map{ "key": SyntheticsCreateApiCheckV2Args{...} }
type SyntheticsCreateApiCheckV2MapInput interface {
	pulumi.Input

	ToSyntheticsCreateApiCheckV2MapOutput() SyntheticsCreateApiCheckV2MapOutput
	ToSyntheticsCreateApiCheckV2MapOutputWithContext(context.Context) SyntheticsCreateApiCheckV2MapOutput
}

type SyntheticsCreateApiCheckV2Map map[string]SyntheticsCreateApiCheckV2Input

func (SyntheticsCreateApiCheckV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (i SyntheticsCreateApiCheckV2Map) ToSyntheticsCreateApiCheckV2MapOutput() SyntheticsCreateApiCheckV2MapOutput {
	return i.ToSyntheticsCreateApiCheckV2MapOutputWithContext(context.Background())
}

func (i SyntheticsCreateApiCheckV2Map) ToSyntheticsCreateApiCheckV2MapOutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateApiCheckV2MapOutput)
}

type SyntheticsCreateApiCheckV2Output struct{ *pulumi.OutputState }

func (SyntheticsCreateApiCheckV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateApiCheckV2Output) ToSyntheticsCreateApiCheckV2Output() SyntheticsCreateApiCheckV2Output {
	return o
}

func (o SyntheticsCreateApiCheckV2Output) ToSyntheticsCreateApiCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2Output {
	return o
}

func (o SyntheticsCreateApiCheckV2Output) Tests() SyntheticsCreateApiCheckV2TestArrayOutput {
	return o.ApplyT(func(v *SyntheticsCreateApiCheckV2) SyntheticsCreateApiCheckV2TestArrayOutput { return v.Tests }).(SyntheticsCreateApiCheckV2TestArrayOutput)
}

type SyntheticsCreateApiCheckV2ArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateApiCheckV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateApiCheckV2ArrayOutput) ToSyntheticsCreateApiCheckV2ArrayOutput() SyntheticsCreateApiCheckV2ArrayOutput {
	return o
}

func (o SyntheticsCreateApiCheckV2ArrayOutput) ToSyntheticsCreateApiCheckV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2ArrayOutput {
	return o
}

func (o SyntheticsCreateApiCheckV2ArrayOutput) Index(i pulumi.IntInput) SyntheticsCreateApiCheckV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyntheticsCreateApiCheckV2 {
		return vs[0].([]*SyntheticsCreateApiCheckV2)[vs[1].(int)]
	}).(SyntheticsCreateApiCheckV2Output)
}

type SyntheticsCreateApiCheckV2MapOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateApiCheckV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateApiCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateApiCheckV2MapOutput) ToSyntheticsCreateApiCheckV2MapOutput() SyntheticsCreateApiCheckV2MapOutput {
	return o
}

func (o SyntheticsCreateApiCheckV2MapOutput) ToSyntheticsCreateApiCheckV2MapOutputWithContext(ctx context.Context) SyntheticsCreateApiCheckV2MapOutput {
	return o
}

func (o SyntheticsCreateApiCheckV2MapOutput) MapIndex(k pulumi.StringInput) SyntheticsCreateApiCheckV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyntheticsCreateApiCheckV2 {
		return vs[0].(map[string]*SyntheticsCreateApiCheckV2)[vs[1].(string)]
	}).(SyntheticsCreateApiCheckV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateApiCheckV2Input)(nil)).Elem(), &SyntheticsCreateApiCheckV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateApiCheckV2ArrayInput)(nil)).Elem(), SyntheticsCreateApiCheckV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateApiCheckV2MapInput)(nil)).Elem(), SyntheticsCreateApiCheckV2Map{})
	pulumi.RegisterOutputType(SyntheticsCreateApiCheckV2Output{})
	pulumi.RegisterOutputType(SyntheticsCreateApiCheckV2ArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsCreateApiCheckV2MapOutput{})
}
