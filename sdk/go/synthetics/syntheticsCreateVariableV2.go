// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics/internal"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.NewSyntheticsCreateVariableV2(ctx, "variableV2Foo", &synthetics.SyntheticsCreateVariableV2Args{
//				Variables: synthetics.SyntheticsCreateVariableV2VariableArray{
//					&synthetics.SyntheticsCreateVariableV2VariableArgs{
//						Description: pulumi.String("The most awesome variable. Full of snakes."),
//						Name:        pulumi.String("terraform-test121"),
//						Secret:      pulumi.Bool(false),
//						Value:       pulumi.String("barv3--oopsasdasd"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type SyntheticsCreateVariableV2 struct {
	pulumi.CustomResourceState

	Variables SyntheticsCreateVariableV2VariableArrayOutput `pulumi:"variables"`
}

// NewSyntheticsCreateVariableV2 registers a new resource with the given unique name, arguments, and options.
func NewSyntheticsCreateVariableV2(ctx *pulumi.Context,
	name string, args *SyntheticsCreateVariableV2Args, opts ...pulumi.ResourceOption) (*SyntheticsCreateVariableV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Variables == nil {
		return nil, errors.New("invalid value for required argument 'Variables'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyntheticsCreateVariableV2
	err := ctx.RegisterResource("synthetics:index/syntheticsCreateVariableV2:SyntheticsCreateVariableV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyntheticsCreateVariableV2 gets an existing SyntheticsCreateVariableV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyntheticsCreateVariableV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyntheticsCreateVariableV2State, opts ...pulumi.ResourceOption) (*SyntheticsCreateVariableV2, error) {
	var resource SyntheticsCreateVariableV2
	err := ctx.ReadResource("synthetics:index/syntheticsCreateVariableV2:SyntheticsCreateVariableV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyntheticsCreateVariableV2 resources.
type syntheticsCreateVariableV2State struct {
	Variables []SyntheticsCreateVariableV2Variable `pulumi:"variables"`
}

type SyntheticsCreateVariableV2State struct {
	Variables SyntheticsCreateVariableV2VariableArrayInput
}

func (SyntheticsCreateVariableV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateVariableV2State)(nil)).Elem()
}

type syntheticsCreateVariableV2Args struct {
	Variables []SyntheticsCreateVariableV2Variable `pulumi:"variables"`
}

// The set of arguments for constructing a SyntheticsCreateVariableV2 resource.
type SyntheticsCreateVariableV2Args struct {
	Variables SyntheticsCreateVariableV2VariableArrayInput
}

func (SyntheticsCreateVariableV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateVariableV2Args)(nil)).Elem()
}

type SyntheticsCreateVariableV2Input interface {
	pulumi.Input

	ToSyntheticsCreateVariableV2Output() SyntheticsCreateVariableV2Output
	ToSyntheticsCreateVariableV2OutputWithContext(ctx context.Context) SyntheticsCreateVariableV2Output
}

func (*SyntheticsCreateVariableV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateVariableV2)(nil)).Elem()
}

func (i *SyntheticsCreateVariableV2) ToSyntheticsCreateVariableV2Output() SyntheticsCreateVariableV2Output {
	return i.ToSyntheticsCreateVariableV2OutputWithContext(context.Background())
}

func (i *SyntheticsCreateVariableV2) ToSyntheticsCreateVariableV2OutputWithContext(ctx context.Context) SyntheticsCreateVariableV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateVariableV2Output)
}

// SyntheticsCreateVariableV2ArrayInput is an input type that accepts SyntheticsCreateVariableV2Array and SyntheticsCreateVariableV2ArrayOutput values.
// You can construct a concrete instance of `SyntheticsCreateVariableV2ArrayInput` via:
//
//	SyntheticsCreateVariableV2Array{ SyntheticsCreateVariableV2Args{...} }
type SyntheticsCreateVariableV2ArrayInput interface {
	pulumi.Input

	ToSyntheticsCreateVariableV2ArrayOutput() SyntheticsCreateVariableV2ArrayOutput
	ToSyntheticsCreateVariableV2ArrayOutputWithContext(context.Context) SyntheticsCreateVariableV2ArrayOutput
}

type SyntheticsCreateVariableV2Array []SyntheticsCreateVariableV2Input

func (SyntheticsCreateVariableV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateVariableV2)(nil)).Elem()
}

func (i SyntheticsCreateVariableV2Array) ToSyntheticsCreateVariableV2ArrayOutput() SyntheticsCreateVariableV2ArrayOutput {
	return i.ToSyntheticsCreateVariableV2ArrayOutputWithContext(context.Background())
}

func (i SyntheticsCreateVariableV2Array) ToSyntheticsCreateVariableV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateVariableV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateVariableV2ArrayOutput)
}

// SyntheticsCreateVariableV2MapInput is an input type that accepts SyntheticsCreateVariableV2Map and SyntheticsCreateVariableV2MapOutput values.
// You can construct a concrete instance of `SyntheticsCreateVariableV2MapInput` via:
//
//	SyntheticsCreateVariableV2Map{ "key": SyntheticsCreateVariableV2Args{...} }
type SyntheticsCreateVariableV2MapInput interface {
	pulumi.Input

	ToSyntheticsCreateVariableV2MapOutput() SyntheticsCreateVariableV2MapOutput
	ToSyntheticsCreateVariableV2MapOutputWithContext(context.Context) SyntheticsCreateVariableV2MapOutput
}

type SyntheticsCreateVariableV2Map map[string]SyntheticsCreateVariableV2Input

func (SyntheticsCreateVariableV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateVariableV2)(nil)).Elem()
}

func (i SyntheticsCreateVariableV2Map) ToSyntheticsCreateVariableV2MapOutput() SyntheticsCreateVariableV2MapOutput {
	return i.ToSyntheticsCreateVariableV2MapOutputWithContext(context.Background())
}

func (i SyntheticsCreateVariableV2Map) ToSyntheticsCreateVariableV2MapOutputWithContext(ctx context.Context) SyntheticsCreateVariableV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateVariableV2MapOutput)
}

type SyntheticsCreateVariableV2Output struct{ *pulumi.OutputState }

func (SyntheticsCreateVariableV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateVariableV2)(nil)).Elem()
}

func (o SyntheticsCreateVariableV2Output) ToSyntheticsCreateVariableV2Output() SyntheticsCreateVariableV2Output {
	return o
}

func (o SyntheticsCreateVariableV2Output) ToSyntheticsCreateVariableV2OutputWithContext(ctx context.Context) SyntheticsCreateVariableV2Output {
	return o
}

func (o SyntheticsCreateVariableV2Output) Variables() SyntheticsCreateVariableV2VariableArrayOutput {
	return o.ApplyT(func(v *SyntheticsCreateVariableV2) SyntheticsCreateVariableV2VariableArrayOutput { return v.Variables }).(SyntheticsCreateVariableV2VariableArrayOutput)
}

type SyntheticsCreateVariableV2ArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateVariableV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateVariableV2)(nil)).Elem()
}

func (o SyntheticsCreateVariableV2ArrayOutput) ToSyntheticsCreateVariableV2ArrayOutput() SyntheticsCreateVariableV2ArrayOutput {
	return o
}

func (o SyntheticsCreateVariableV2ArrayOutput) ToSyntheticsCreateVariableV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateVariableV2ArrayOutput {
	return o
}

func (o SyntheticsCreateVariableV2ArrayOutput) Index(i pulumi.IntInput) SyntheticsCreateVariableV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyntheticsCreateVariableV2 {
		return vs[0].([]*SyntheticsCreateVariableV2)[vs[1].(int)]
	}).(SyntheticsCreateVariableV2Output)
}

type SyntheticsCreateVariableV2MapOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateVariableV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateVariableV2)(nil)).Elem()
}

func (o SyntheticsCreateVariableV2MapOutput) ToSyntheticsCreateVariableV2MapOutput() SyntheticsCreateVariableV2MapOutput {
	return o
}

func (o SyntheticsCreateVariableV2MapOutput) ToSyntheticsCreateVariableV2MapOutputWithContext(ctx context.Context) SyntheticsCreateVariableV2MapOutput {
	return o
}

func (o SyntheticsCreateVariableV2MapOutput) MapIndex(k pulumi.StringInput) SyntheticsCreateVariableV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyntheticsCreateVariableV2 {
		return vs[0].(map[string]*SyntheticsCreateVariableV2)[vs[1].(string)]
	}).(SyntheticsCreateVariableV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateVariableV2Input)(nil)).Elem(), &SyntheticsCreateVariableV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateVariableV2ArrayInput)(nil)).Elem(), SyntheticsCreateVariableV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateVariableV2MapInput)(nil)).Elem(), SyntheticsCreateVariableV2Map{})
	pulumi.RegisterOutputType(SyntheticsCreateVariableV2Output{})
	pulumi.RegisterOutputType(SyntheticsCreateVariableV2ArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsCreateVariableV2MapOutput{})
}
