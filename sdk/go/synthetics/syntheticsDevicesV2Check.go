// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics/internal"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/yuft/pulumi-signalfx-synthetics/sdk/go/synthetics"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.SyntheticsDevicesV2Check(ctx, &synthetics.SyntheticsDevicesV2CheckArgs{
//				Devices: []synthetics.SyntheticsDevicesV2CheckDevice{
//					nil,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func SyntheticsDevicesV2Check(ctx *pulumi.Context, args *SyntheticsDevicesV2CheckArgs, opts ...pulumi.InvokeOption) (*SyntheticsDevicesV2CheckResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SyntheticsDevicesV2CheckResult
	err := ctx.Invoke("synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking syntheticsDevicesV2Check.
type SyntheticsDevicesV2CheckArgs struct {
	Devices []SyntheticsDevicesV2CheckDevice `pulumi:"devices"`
}

// A collection of values returned by syntheticsDevicesV2Check.
type SyntheticsDevicesV2CheckResult struct {
	Devices []SyntheticsDevicesV2CheckDevice `pulumi:"devices"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func SyntheticsDevicesV2CheckOutput(ctx *pulumi.Context, args SyntheticsDevicesV2CheckOutputArgs, opts ...pulumi.InvokeOption) SyntheticsDevicesV2CheckResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SyntheticsDevicesV2CheckResult, error) {
			args := v.(SyntheticsDevicesV2CheckArgs)
			r, err := SyntheticsDevicesV2Check(ctx, &args, opts...)
			var s SyntheticsDevicesV2CheckResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SyntheticsDevicesV2CheckResultOutput)
}

// A collection of arguments for invoking syntheticsDevicesV2Check.
type SyntheticsDevicesV2CheckOutputArgs struct {
	Devices SyntheticsDevicesV2CheckDeviceArrayInput `pulumi:"devices"`
}

func (SyntheticsDevicesV2CheckOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsDevicesV2CheckArgs)(nil)).Elem()
}

// A collection of values returned by syntheticsDevicesV2Check.
type SyntheticsDevicesV2CheckResultOutput struct{ *pulumi.OutputState }

func (SyntheticsDevicesV2CheckResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsDevicesV2CheckResult)(nil)).Elem()
}

func (o SyntheticsDevicesV2CheckResultOutput) ToSyntheticsDevicesV2CheckResultOutput() SyntheticsDevicesV2CheckResultOutput {
	return o
}

func (o SyntheticsDevicesV2CheckResultOutput) ToSyntheticsDevicesV2CheckResultOutputWithContext(ctx context.Context) SyntheticsDevicesV2CheckResultOutput {
	return o
}

func (o SyntheticsDevicesV2CheckResultOutput) Devices() SyntheticsDevicesV2CheckDeviceArrayOutput {
	return o.ApplyT(func(v SyntheticsDevicesV2CheckResult) []SyntheticsDevicesV2CheckDevice { return v.Devices }).(SyntheticsDevicesV2CheckDeviceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o SyntheticsDevicesV2CheckResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsDevicesV2CheckResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SyntheticsDevicesV2CheckResultOutput{})
}
