// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"errors"
	"github.com/displayr/pulumi-signalfx-synthetics/sdk/go/synthetics/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
type SyntheticsCreateBrowserCheckV2 struct {
	pulumi.CustomResourceState

	Tests SyntheticsCreateBrowserCheckV2TestArrayOutput `pulumi:"tests"`
}

// NewSyntheticsCreateBrowserCheckV2 registers a new resource with the given unique name, arguments, and options.
func NewSyntheticsCreateBrowserCheckV2(ctx *pulumi.Context,
	name string, args *SyntheticsCreateBrowserCheckV2Args, opts ...pulumi.ResourceOption) (*SyntheticsCreateBrowserCheckV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Tests == nil {
		return nil, errors.New("invalid value for required argument 'Tests'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyntheticsCreateBrowserCheckV2
	err := ctx.RegisterResource("synthetics:index/syntheticsCreateBrowserCheckV2:SyntheticsCreateBrowserCheckV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyntheticsCreateBrowserCheckV2 gets an existing SyntheticsCreateBrowserCheckV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyntheticsCreateBrowserCheckV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyntheticsCreateBrowserCheckV2State, opts ...pulumi.ResourceOption) (*SyntheticsCreateBrowserCheckV2, error) {
	var resource SyntheticsCreateBrowserCheckV2
	err := ctx.ReadResource("synthetics:index/syntheticsCreateBrowserCheckV2:SyntheticsCreateBrowserCheckV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyntheticsCreateBrowserCheckV2 resources.
type syntheticsCreateBrowserCheckV2State struct {
	Tests []SyntheticsCreateBrowserCheckV2Test `pulumi:"tests"`
}

type SyntheticsCreateBrowserCheckV2State struct {
	Tests SyntheticsCreateBrowserCheckV2TestArrayInput
}

func (SyntheticsCreateBrowserCheckV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateBrowserCheckV2State)(nil)).Elem()
}

type syntheticsCreateBrowserCheckV2Args struct {
	Tests []SyntheticsCreateBrowserCheckV2Test `pulumi:"tests"`
}

// The set of arguments for constructing a SyntheticsCreateBrowserCheckV2 resource.
type SyntheticsCreateBrowserCheckV2Args struct {
	Tests SyntheticsCreateBrowserCheckV2TestArrayInput
}

func (SyntheticsCreateBrowserCheckV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsCreateBrowserCheckV2Args)(nil)).Elem()
}

type SyntheticsCreateBrowserCheckV2Input interface {
	pulumi.Input

	ToSyntheticsCreateBrowserCheckV2Output() SyntheticsCreateBrowserCheckV2Output
	ToSyntheticsCreateBrowserCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2Output
}

func (*SyntheticsCreateBrowserCheckV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (i *SyntheticsCreateBrowserCheckV2) ToSyntheticsCreateBrowserCheckV2Output() SyntheticsCreateBrowserCheckV2Output {
	return i.ToSyntheticsCreateBrowserCheckV2OutputWithContext(context.Background())
}

func (i *SyntheticsCreateBrowserCheckV2) ToSyntheticsCreateBrowserCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateBrowserCheckV2Output)
}

// SyntheticsCreateBrowserCheckV2ArrayInput is an input type that accepts SyntheticsCreateBrowserCheckV2Array and SyntheticsCreateBrowserCheckV2ArrayOutput values.
// You can construct a concrete instance of `SyntheticsCreateBrowserCheckV2ArrayInput` via:
//
//	SyntheticsCreateBrowserCheckV2Array{ SyntheticsCreateBrowserCheckV2Args{...} }
type SyntheticsCreateBrowserCheckV2ArrayInput interface {
	pulumi.Input

	ToSyntheticsCreateBrowserCheckV2ArrayOutput() SyntheticsCreateBrowserCheckV2ArrayOutput
	ToSyntheticsCreateBrowserCheckV2ArrayOutputWithContext(context.Context) SyntheticsCreateBrowserCheckV2ArrayOutput
}

type SyntheticsCreateBrowserCheckV2Array []SyntheticsCreateBrowserCheckV2Input

func (SyntheticsCreateBrowserCheckV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (i SyntheticsCreateBrowserCheckV2Array) ToSyntheticsCreateBrowserCheckV2ArrayOutput() SyntheticsCreateBrowserCheckV2ArrayOutput {
	return i.ToSyntheticsCreateBrowserCheckV2ArrayOutputWithContext(context.Background())
}

func (i SyntheticsCreateBrowserCheckV2Array) ToSyntheticsCreateBrowserCheckV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateBrowserCheckV2ArrayOutput)
}

// SyntheticsCreateBrowserCheckV2MapInput is an input type that accepts SyntheticsCreateBrowserCheckV2Map and SyntheticsCreateBrowserCheckV2MapOutput values.
// You can construct a concrete instance of `SyntheticsCreateBrowserCheckV2MapInput` via:
//
//	SyntheticsCreateBrowserCheckV2Map{ "key": SyntheticsCreateBrowserCheckV2Args{...} }
type SyntheticsCreateBrowserCheckV2MapInput interface {
	pulumi.Input

	ToSyntheticsCreateBrowserCheckV2MapOutput() SyntheticsCreateBrowserCheckV2MapOutput
	ToSyntheticsCreateBrowserCheckV2MapOutputWithContext(context.Context) SyntheticsCreateBrowserCheckV2MapOutput
}

type SyntheticsCreateBrowserCheckV2Map map[string]SyntheticsCreateBrowserCheckV2Input

func (SyntheticsCreateBrowserCheckV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (i SyntheticsCreateBrowserCheckV2Map) ToSyntheticsCreateBrowserCheckV2MapOutput() SyntheticsCreateBrowserCheckV2MapOutput {
	return i.ToSyntheticsCreateBrowserCheckV2MapOutputWithContext(context.Background())
}

func (i SyntheticsCreateBrowserCheckV2Map) ToSyntheticsCreateBrowserCheckV2MapOutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsCreateBrowserCheckV2MapOutput)
}

type SyntheticsCreateBrowserCheckV2Output struct{ *pulumi.OutputState }

func (SyntheticsCreateBrowserCheckV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateBrowserCheckV2Output) ToSyntheticsCreateBrowserCheckV2Output() SyntheticsCreateBrowserCheckV2Output {
	return o
}

func (o SyntheticsCreateBrowserCheckV2Output) ToSyntheticsCreateBrowserCheckV2OutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2Output {
	return o
}

func (o SyntheticsCreateBrowserCheckV2Output) Tests() SyntheticsCreateBrowserCheckV2TestArrayOutput {
	return o.ApplyT(func(v *SyntheticsCreateBrowserCheckV2) SyntheticsCreateBrowserCheckV2TestArrayOutput { return v.Tests }).(SyntheticsCreateBrowserCheckV2TestArrayOutput)
}

type SyntheticsCreateBrowserCheckV2ArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateBrowserCheckV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateBrowserCheckV2ArrayOutput) ToSyntheticsCreateBrowserCheckV2ArrayOutput() SyntheticsCreateBrowserCheckV2ArrayOutput {
	return o
}

func (o SyntheticsCreateBrowserCheckV2ArrayOutput) ToSyntheticsCreateBrowserCheckV2ArrayOutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2ArrayOutput {
	return o
}

func (o SyntheticsCreateBrowserCheckV2ArrayOutput) Index(i pulumi.IntInput) SyntheticsCreateBrowserCheckV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyntheticsCreateBrowserCheckV2 {
		return vs[0].([]*SyntheticsCreateBrowserCheckV2)[vs[1].(int)]
	}).(SyntheticsCreateBrowserCheckV2Output)
}

type SyntheticsCreateBrowserCheckV2MapOutput struct{ *pulumi.OutputState }

func (SyntheticsCreateBrowserCheckV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsCreateBrowserCheckV2)(nil)).Elem()
}

func (o SyntheticsCreateBrowserCheckV2MapOutput) ToSyntheticsCreateBrowserCheckV2MapOutput() SyntheticsCreateBrowserCheckV2MapOutput {
	return o
}

func (o SyntheticsCreateBrowserCheckV2MapOutput) ToSyntheticsCreateBrowserCheckV2MapOutputWithContext(ctx context.Context) SyntheticsCreateBrowserCheckV2MapOutput {
	return o
}

func (o SyntheticsCreateBrowserCheckV2MapOutput) MapIndex(k pulumi.StringInput) SyntheticsCreateBrowserCheckV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyntheticsCreateBrowserCheckV2 {
		return vs[0].(map[string]*SyntheticsCreateBrowserCheckV2)[vs[1].(string)]
	}).(SyntheticsCreateBrowserCheckV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateBrowserCheckV2Input)(nil)).Elem(), &SyntheticsCreateBrowserCheckV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateBrowserCheckV2ArrayInput)(nil)).Elem(), SyntheticsCreateBrowserCheckV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsCreateBrowserCheckV2MapInput)(nil)).Elem(), SyntheticsCreateBrowserCheckV2Map{})
	pulumi.RegisterOutputType(SyntheticsCreateBrowserCheckV2Output{})
	pulumi.RegisterOutputType(SyntheticsCreateBrowserCheckV2ArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsCreateBrowserCheckV2MapOutput{})
}
