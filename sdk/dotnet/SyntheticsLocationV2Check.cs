// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Synthetics
{
    public static class SyntheticsLocationV2Check
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceLocation = Synthetics.SyntheticsLocationV2Check.Invoke(new()
        ///     {
        ///         Locations = new[]
        ///         {
        ///             new Synthetics.Inputs.SyntheticsLocationV2CheckLocationInputArgs
        ///             {
        ///                 Id = "private-aws-awesome-east",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<SyntheticsLocationV2CheckResult> InvokeAsync(SyntheticsLocationV2CheckArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SyntheticsLocationV2CheckResult>("synthetics:index/syntheticsLocationV2Check:syntheticsLocationV2Check", args ?? new SyntheticsLocationV2CheckArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceLocation = Synthetics.SyntheticsLocationV2Check.Invoke(new()
        ///     {
        ///         Locations = new[]
        ///         {
        ///             new Synthetics.Inputs.SyntheticsLocationV2CheckLocationInputArgs
        ///             {
        ///                 Id = "private-aws-awesome-east",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<SyntheticsLocationV2CheckResult> Invoke(SyntheticsLocationV2CheckInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SyntheticsLocationV2CheckResult>("synthetics:index/syntheticsLocationV2Check:syntheticsLocationV2Check", args ?? new SyntheticsLocationV2CheckInvokeArgs(), options.WithDefaults());
    }


    public sealed class SyntheticsLocationV2CheckArgs : global::Pulumi.InvokeArgs
    {
        [Input("locations", required: true)]
        private List<Inputs.SyntheticsLocationV2CheckLocationArgs>? _locations;
        public List<Inputs.SyntheticsLocationV2CheckLocationArgs> Locations
        {
            get => _locations ?? (_locations = new List<Inputs.SyntheticsLocationV2CheckLocationArgs>());
            set => _locations = value;
        }

        [Input("metas")]
        private List<Inputs.SyntheticsLocationV2CheckMetaArgs>? _metas;
        public List<Inputs.SyntheticsLocationV2CheckMetaArgs> Metas
        {
            get => _metas ?? (_metas = new List<Inputs.SyntheticsLocationV2CheckMetaArgs>());
            set => _metas = value;
        }

        public SyntheticsLocationV2CheckArgs()
        {
        }
        public static new SyntheticsLocationV2CheckArgs Empty => new SyntheticsLocationV2CheckArgs();
    }

    public sealed class SyntheticsLocationV2CheckInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("locations", required: true)]
        private InputList<Inputs.SyntheticsLocationV2CheckLocationInputArgs>? _locations;
        public InputList<Inputs.SyntheticsLocationV2CheckLocationInputArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.SyntheticsLocationV2CheckLocationInputArgs>());
            set => _locations = value;
        }

        [Input("metas")]
        private InputList<Inputs.SyntheticsLocationV2CheckMetaInputArgs>? _metas;
        public InputList<Inputs.SyntheticsLocationV2CheckMetaInputArgs> Metas
        {
            get => _metas ?? (_metas = new InputList<Inputs.SyntheticsLocationV2CheckMetaInputArgs>());
            set => _metas = value;
        }

        public SyntheticsLocationV2CheckInvokeArgs()
        {
        }
        public static new SyntheticsLocationV2CheckInvokeArgs Empty => new SyntheticsLocationV2CheckInvokeArgs();
    }


    [OutputType]
    public sealed class SyntheticsLocationV2CheckResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.SyntheticsLocationV2CheckLocationResult> Locations;
        public readonly ImmutableArray<Outputs.SyntheticsLocationV2CheckMetaResult> Metas;

        [OutputConstructor]
        private SyntheticsLocationV2CheckResult(
            string id,

            ImmutableArray<Outputs.SyntheticsLocationV2CheckLocationResult> locations,

            ImmutableArray<Outputs.SyntheticsLocationV2CheckMetaResult> metas)
        {
            Id = id;
            Locations = locations;
            Metas = metas;
        }
    }
}
