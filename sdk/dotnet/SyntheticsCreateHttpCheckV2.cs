// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Synthetics
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Synthetics = Pulumi.Synthetics;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var httpV2FooCheck = new Synthetics.SyntheticsCreateHttpCheckV2("httpV2FooCheck", new()
    ///     {
    ///         Tests = new[]
    ///         {
    ///             new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestArgs
    ///             {
    ///                 Active = true,
    ///                 Frequency = 5,
    ///                 LocationIds = new[]
    ///                 {
    ///                     "aws-us-east-1",
    ///                     "aws-ap-northeast-3",
    ///                 },
    ///                 Name = "Terraform - HTTP V2 Checkaroo",
    ///                 Type = "http",
    ///                 Url = "https://www.splunk.com",
    ///                 SchedulingStrategy = "round_robin",
    ///                 RequestMethod = "GET",
    ///                 Body = null,
    ///                 Headers = new[]
    ///                 {
    ///                     new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestHeaderArgs
    ///                     {
    ///                         Name = "Synthetic_transaction_1",
    ///                         Value = "batman is the man",
    ///                     },
    ///                     new Synthetics.Inputs.SyntheticsCreateHttpCheckV2TestHeaderArgs
    ///                     {
    ///                         Name = "back_transaction_1",
    ///                         Value = "peeko",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [SyntheticsResourceType("synthetics:index/syntheticsCreateHttpCheckV2:SyntheticsCreateHttpCheckV2")]
    public partial class SyntheticsCreateHttpCheckV2 : global::Pulumi.CustomResource
    {
        [Output("tests")]
        public Output<ImmutableArray<Outputs.SyntheticsCreateHttpCheckV2Test>> Tests { get; private set; } = null!;


        /// <summary>
        /// Create a SyntheticsCreateHttpCheckV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SyntheticsCreateHttpCheckV2(string name, SyntheticsCreateHttpCheckV2Args args, CustomResourceOptions? options = null)
            : base("synthetics:index/syntheticsCreateHttpCheckV2:SyntheticsCreateHttpCheckV2", name, args ?? new SyntheticsCreateHttpCheckV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private SyntheticsCreateHttpCheckV2(string name, Input<string> id, SyntheticsCreateHttpCheckV2State? state = null, CustomResourceOptions? options = null)
            : base("synthetics:index/syntheticsCreateHttpCheckV2:SyntheticsCreateHttpCheckV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/Displayr/pulumi-signalfx-synthetics/releases/download/v0.0.12/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SyntheticsCreateHttpCheckV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SyntheticsCreateHttpCheckV2 Get(string name, Input<string> id, SyntheticsCreateHttpCheckV2State? state = null, CustomResourceOptions? options = null)
        {
            return new SyntheticsCreateHttpCheckV2(name, id, state, options);
        }
    }

    public sealed class SyntheticsCreateHttpCheckV2Args : global::Pulumi.ResourceArgs
    {
        [Input("tests", required: true)]
        private InputList<Inputs.SyntheticsCreateHttpCheckV2TestArgs>? _tests;
        public InputList<Inputs.SyntheticsCreateHttpCheckV2TestArgs> Tests
        {
            get => _tests ?? (_tests = new InputList<Inputs.SyntheticsCreateHttpCheckV2TestArgs>());
            set => _tests = value;
        }

        public SyntheticsCreateHttpCheckV2Args()
        {
        }
        public static new SyntheticsCreateHttpCheckV2Args Empty => new SyntheticsCreateHttpCheckV2Args();
    }

    public sealed class SyntheticsCreateHttpCheckV2State : global::Pulumi.ResourceArgs
    {
        [Input("tests")]
        private InputList<Inputs.SyntheticsCreateHttpCheckV2TestGetArgs>? _tests;
        public InputList<Inputs.SyntheticsCreateHttpCheckV2TestGetArgs> Tests
        {
            get => _tests ?? (_tests = new InputList<Inputs.SyntheticsCreateHttpCheckV2TestGetArgs>());
            set => _tests = value;
        }

        public SyntheticsCreateHttpCheckV2State()
        {
        }
        public static new SyntheticsCreateHttpCheckV2State Empty => new SyntheticsCreateHttpCheckV2State();
    }
}
