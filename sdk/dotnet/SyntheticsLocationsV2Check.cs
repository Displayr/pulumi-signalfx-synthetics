// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Synthetics
{
    public static class SyntheticsLocationsV2Check
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceLocations = Synthetics.SyntheticsLocationsV2Check.Invoke(new()
        ///     {
        ///         Locations = new[]
        ///         {
        ///             null,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<SyntheticsLocationsV2CheckResult> InvokeAsync(SyntheticsLocationsV2CheckArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SyntheticsLocationsV2CheckResult>("synthetics:index/syntheticsLocationsV2Check:syntheticsLocationsV2Check", args ?? new SyntheticsLocationsV2CheckArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceLocations = Synthetics.SyntheticsLocationsV2Check.Invoke(new()
        ///     {
        ///         Locations = new[]
        ///         {
        ///             null,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<SyntheticsLocationsV2CheckResult> Invoke(SyntheticsLocationsV2CheckInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SyntheticsLocationsV2CheckResult>("synthetics:index/syntheticsLocationsV2Check:syntheticsLocationsV2Check", args ?? new SyntheticsLocationsV2CheckInvokeArgs(), options.WithDefaults());
    }


    public sealed class SyntheticsLocationsV2CheckArgs : global::Pulumi.InvokeArgs
    {
        [Input("locations")]
        private List<Inputs.SyntheticsLocationsV2CheckLocationArgs>? _locations;
        public List<Inputs.SyntheticsLocationsV2CheckLocationArgs> Locations
        {
            get => _locations ?? (_locations = new List<Inputs.SyntheticsLocationsV2CheckLocationArgs>());
            set => _locations = value;
        }

        public SyntheticsLocationsV2CheckArgs()
        {
        }
        public static new SyntheticsLocationsV2CheckArgs Empty => new SyntheticsLocationsV2CheckArgs();
    }

    public sealed class SyntheticsLocationsV2CheckInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("locations")]
        private InputList<Inputs.SyntheticsLocationsV2CheckLocationInputArgs>? _locations;
        public InputList<Inputs.SyntheticsLocationsV2CheckLocationInputArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.SyntheticsLocationsV2CheckLocationInputArgs>());
            set => _locations = value;
        }

        public SyntheticsLocationsV2CheckInvokeArgs()
        {
        }
        public static new SyntheticsLocationsV2CheckInvokeArgs Empty => new SyntheticsLocationsV2CheckInvokeArgs();
    }


    [OutputType]
    public sealed class SyntheticsLocationsV2CheckResult
    {
        public readonly ImmutableArray<string> DefaultLocationIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.SyntheticsLocationsV2CheckLocationResult> Locations;

        [OutputConstructor]
        private SyntheticsLocationsV2CheckResult(
            ImmutableArray<string> defaultLocationIds,

            string id,

            ImmutableArray<Outputs.SyntheticsLocationsV2CheckLocationResult> locations)
        {
            DefaultLocationIds = defaultLocationIds;
            Id = id;
            Locations = locations;
        }
    }
}
