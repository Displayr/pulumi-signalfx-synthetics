// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Synthetics
{
    public static class SyntheticsDevicesV2Check
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceDevices = Synthetics.SyntheticsDevicesV2Check.Invoke(new()
        ///     {
        ///         Devices = new[]
        ///         {
        ///             null,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<SyntheticsDevicesV2CheckResult> InvokeAsync(SyntheticsDevicesV2CheckArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SyntheticsDevicesV2CheckResult>("synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check", args ?? new SyntheticsDevicesV2CheckArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Synthetics = Pulumi.Synthetics;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datasourceDevices = Synthetics.SyntheticsDevicesV2Check.Invoke(new()
        ///     {
        ///         Devices = new[]
        ///         {
        ///             null,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<SyntheticsDevicesV2CheckResult> Invoke(SyntheticsDevicesV2CheckInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SyntheticsDevicesV2CheckResult>("synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check", args ?? new SyntheticsDevicesV2CheckInvokeArgs(), options.WithDefaults());
    }


    public sealed class SyntheticsDevicesV2CheckArgs : global::Pulumi.InvokeArgs
    {
        [Input("devices")]
        private List<Inputs.SyntheticsDevicesV2CheckDeviceArgs>? _devices;
        public List<Inputs.SyntheticsDevicesV2CheckDeviceArgs> Devices
        {
            get => _devices ?? (_devices = new List<Inputs.SyntheticsDevicesV2CheckDeviceArgs>());
            set => _devices = value;
        }

        public SyntheticsDevicesV2CheckArgs()
        {
        }
        public static new SyntheticsDevicesV2CheckArgs Empty => new SyntheticsDevicesV2CheckArgs();
    }

    public sealed class SyntheticsDevicesV2CheckInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("devices")]
        private InputList<Inputs.SyntheticsDevicesV2CheckDeviceInputArgs>? _devices;
        public InputList<Inputs.SyntheticsDevicesV2CheckDeviceInputArgs> Devices
        {
            get => _devices ?? (_devices = new InputList<Inputs.SyntheticsDevicesV2CheckDeviceInputArgs>());
            set => _devices = value;
        }

        public SyntheticsDevicesV2CheckInvokeArgs()
        {
        }
        public static new SyntheticsDevicesV2CheckInvokeArgs Empty => new SyntheticsDevicesV2CheckInvokeArgs();
    }


    [OutputType]
    public sealed class SyntheticsDevicesV2CheckResult
    {
        public readonly ImmutableArray<Outputs.SyntheticsDevicesV2CheckDeviceResult> Devices;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private SyntheticsDevicesV2CheckResult(
            ImmutableArray<Outputs.SyntheticsDevicesV2CheckDeviceResult> devices,

            string id)
        {
            Devices = devices;
            Id = id;
        }
    }
}
