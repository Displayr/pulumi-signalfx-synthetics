// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface SyntheticsApiV2CheckTest {
    active: boolean;
    createdAt: string;
    devices: outputs.SyntheticsApiV2CheckTestDevice[];
    frequency: number;
    /**
     * The ID of this resource.
     */
    id: number;
    locationIds?: string[];
    name: string;
    requests: outputs.SyntheticsApiV2CheckTestRequest[];
    schedulingStrategy: string;
    type: string;
    updatedAt: string;
}

export interface SyntheticsApiV2CheckTestDevice {
    id: number;
    label: string;
    networkConnections: outputs.SyntheticsApiV2CheckTestDeviceNetworkConnection[];
    userAgent: string;
    viewportHeight?: number;
    viewportWidth?: number;
}

export interface SyntheticsApiV2CheckTestDeviceNetworkConnection {
    description?: string;
    downloadBandwidth?: number;
    latency?: number;
    packetLoss?: number;
    uploadBandwidth?: number;
}

export interface SyntheticsApiV2CheckTestRequest {
    configurations?: outputs.SyntheticsApiV2CheckTestRequestConfiguration[];
    setups: outputs.SyntheticsApiV2CheckTestRequestSetup[];
    validations: outputs.SyntheticsApiV2CheckTestRequestValidation[];
}

export interface SyntheticsApiV2CheckTestRequestConfiguration {
    body?: string;
    headers?: {[key: string]: string};
    name?: string;
    requestMethod?: string;
    url?: string;
}

export interface SyntheticsApiV2CheckTestRequestSetup {
    extractor?: string;
    name?: string;
    source?: string;
    type?: string;
    variable?: string;
}

export interface SyntheticsApiV2CheckTestRequestValidation {
    actual?: string;
    comparator?: string;
    expected?: string;
    name?: string;
    type?: string;
}

export interface SyntheticsBrowserV2CheckTest {
    active: boolean;
    advancedSettings: outputs.SyntheticsBrowserV2CheckTestAdvancedSetting[];
    businessTransactions: outputs.SyntheticsBrowserV2CheckTestBusinessTransaction[];
    createdAt: string;
    devices: outputs.SyntheticsBrowserV2CheckTestDevice[];
    frequency: number;
    /**
     * The ID of this resource.
     */
    id: number;
    locationIds: string[];
    name: string;
    schedulingStrategy: string;
    transactions: outputs.SyntheticsBrowserV2CheckTestTransaction[];
    type: string;
    updatedAt: string;
}

export interface SyntheticsBrowserV2CheckTestAdvancedSetting {
    authentications: outputs.SyntheticsBrowserV2CheckTestAdvancedSettingAuthentication[];
    cookies: outputs.SyntheticsBrowserV2CheckTestAdvancedSettingCookie[];
    headers: outputs.SyntheticsBrowserV2CheckTestAdvancedSettingHeader[];
    hostOverrides: outputs.SyntheticsBrowserV2CheckTestAdvancedSettingHostOverride[];
    userAgent: string;
    verifyCertificates: boolean;
}

export interface SyntheticsBrowserV2CheckTestAdvancedSettingAuthentication {
    password?: string;
    username?: string;
}

export interface SyntheticsBrowserV2CheckTestAdvancedSettingCookie {
    domain?: string;
    key?: string;
    path?: string;
    value?: string;
}

export interface SyntheticsBrowserV2CheckTestAdvancedSettingHeader {
    domain?: string;
    name?: string;
    value?: string;
}

export interface SyntheticsBrowserV2CheckTestAdvancedSettingHostOverride {
    keepHostHeader?: boolean;
    source?: string;
    target?: string;
}

export interface SyntheticsBrowserV2CheckTestBusinessTransaction {
    name?: string;
    steps: outputs.SyntheticsBrowserV2CheckTestBusinessTransactionStep[];
}

export interface SyntheticsBrowserV2CheckTestBusinessTransactionStep {
    action?: string;
    name?: string;
    optionSelector?: string;
    optionSelectorType?: string;
    options: outputs.SyntheticsBrowserV2CheckTestBusinessTransactionStepOption[];
    selector?: string;
    selectorType?: string;
    type?: string;
    url?: string;
    value?: string;
    variableName?: string;
    waitForNav?: boolean;
}

export interface SyntheticsBrowserV2CheckTestBusinessTransactionStepOption {
    url?: string;
}

export interface SyntheticsBrowserV2CheckTestDevice {
    id: number;
    label: string;
    networkConnections: outputs.SyntheticsBrowserV2CheckTestDeviceNetworkConnection[];
    userAgent: string;
    viewportHeight?: number;
    viewportWidth?: number;
}

export interface SyntheticsBrowserV2CheckTestDeviceNetworkConnection {
    description?: string;
    downloadBandwidth?: number;
    latency?: number;
    packetLoss?: number;
    uploadBandwidth?: number;
}

export interface SyntheticsBrowserV2CheckTestTransaction {
    name?: string;
    steps: outputs.SyntheticsBrowserV2CheckTestTransactionStep[];
}

export interface SyntheticsBrowserV2CheckTestTransactionStep {
    action?: string;
    name?: string;
    optionSelector?: string;
    optionSelectorType?: string;
    options: outputs.SyntheticsBrowserV2CheckTestTransactionStepOption[];
    selector?: string;
    selectorType?: string;
    type?: string;
    url?: string;
    value?: string;
    variableName?: string;
    waitForNav?: boolean;
}

export interface SyntheticsBrowserV2CheckTestTransactionStepOption {
    url?: string;
}

export interface SyntheticsCheckBlackoutPeriod {
    createdAt: string;
    durationInMinutes: number;
    endDate: string;
    endTime: string;
    isRepeat: boolean;
    monthlyRepeatType: string;
    repeatType: string;
    startDate: string;
    startTime: string;
    timezone: string;
    updatedAt: string;
}

export interface SyntheticsCheckBrowser {
    type?: string;
}

export interface SyntheticsCheckCheckConnection {
    downloadBandwidth: number;
    latency: number;
    packetLoss: number;
    uploadBandwidth: number;
}

export interface SyntheticsCheckCookie {
    domain?: string;
    key?: string;
    path?: string;
    value?: string;
}

export interface SyntheticsCheckDnsOverride {
    originalDomain?: string;
    originalHost?: string;
}

export interface SyntheticsCheckExcludedFile {
    exclusionType?: string;
    pattern?: string;
    presetName?: string;
}

export interface SyntheticsCheckHttpRequestHeader {
    userAgent: string;
}

export interface SyntheticsCheckIntegration {
    id: number;
    name: string;
}

export interface SyntheticsCheckJavascriptFile {
    /**
     * The ID of this resource.
     */
    id?: number;
    name?: string;
}

export interface SyntheticsCheckLink {
    lastRun: string;
    metrics: string;
    self: string;
    selfHtml: string;
}

export interface SyntheticsCheckLocation {
    id: number;
    name: string;
    regionCode: string;
    worldRegion: string;
}

export interface SyntheticsCheckNotification {
    call: boolean;
    email: boolean;
    escalations: outputs.SyntheticsCheckNotificationEscalation[];
    muted: boolean;
    notificationWindows: outputs.SyntheticsCheckNotificationNotificationWindow[];
    notifyAfterFailureCount: number;
    notifyOnLocationFailure: boolean;
    notifyWhos: outputs.SyntheticsCheckNotificationNotifyWho[];
    sms: boolean;
}

export interface SyntheticsCheckNotificationEscalation {
    afterMinutes: number;
    call: boolean;
    email: boolean;
    isRepeat: boolean;
    notificationWindows: outputs.SyntheticsCheckNotificationEscalationNotificationWindow[];
    notifyWhos: outputs.SyntheticsCheckNotificationEscalationNotifyWho[];
    sms: boolean;
}

export interface SyntheticsCheckNotificationEscalationNotificationWindow {
    durationInMinutes: number;
    endTime: string;
    startTime: string;
    timeZone: string;
}

export interface SyntheticsCheckNotificationEscalationNotifyWho {
    customUserEmail?: string;
    id?: number;
    links: outputs.SyntheticsCheckNotificationEscalationNotifyWhoLink[];
    type?: string;
}

export interface SyntheticsCheckNotificationEscalationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCheckNotificationNotificationWindow {
    durationInMinutes: number;
    endTime: string;
    startTime: string;
    timeZone: string;
}

export interface SyntheticsCheckNotificationNotifyWho {
    call?: boolean;
    customUserEmail?: string;
    email?: boolean;
    id: number;
    links: outputs.SyntheticsCheckNotificationNotifyWhoLink[];
    sms?: boolean;
    type?: string;
}

export interface SyntheticsCheckNotificationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCheckStatus {
    hasFailure: boolean;
    hasLocationFailure: boolean;
    lastAlertAt: string;
    lastCode: number;
    lastFailureAt: string;
    lastMessage: string;
    lastResponseTime: number;
    lastRunAt: string;
}

export interface SyntheticsCheckStep {
    how?: string;
    itemMethod?: string;
    name?: string;
    position?: number;
    value?: string;
    variableName?: string;
    what?: string;
}

export interface SyntheticsCheckSuccessCriteria {
    actionType: string;
    comparisonString: string;
    createdAt: string;
    updatedAt: string;
}

export interface SyntheticsCheckTag {
    id: number;
    name: string;
}

export interface SyntheticsCheckThresholdMonitor {
    comparisonType?: string;
    matcher?: string;
    metricName?: string;
    value?: number;
}

export interface SyntheticsCheckViewport {
    height?: number;
    width?: number;
}

export interface SyntheticsCreateApiCheckV2Test {
    active: boolean;
    deviceId: number;
    frequency: number;
    locationIds: string[];
    name: string;
    requests?: outputs.SyntheticsCreateApiCheckV2TestRequest[];
    schedulingStrategy?: string;
}

export interface SyntheticsCreateApiCheckV2TestRequest {
    configurations?: outputs.SyntheticsCreateApiCheckV2TestRequestConfiguration[];
    setups?: outputs.SyntheticsCreateApiCheckV2TestRequestSetup[];
    validations?: outputs.SyntheticsCreateApiCheckV2TestRequestValidation[];
}

export interface SyntheticsCreateApiCheckV2TestRequestConfiguration {
    body?: string;
    headers?: {[key: string]: string};
    name?: string;
    requestMethod?: string;
    url?: string;
}

export interface SyntheticsCreateApiCheckV2TestRequestSetup {
    extractor?: string;
    name?: string;
    source?: string;
    type?: string;
    variable?: string;
}

export interface SyntheticsCreateApiCheckV2TestRequestValidation {
    actual?: string;
    comparator?: string;
    expected?: string;
    name?: string;
    type?: string;
}

export interface SyntheticsCreateBrowserCheckBlackoutPeriod {
    createdAt: string;
    durationInMinutes: number;
    endDate: string;
    endTime: string;
    isRepeat: boolean;
    monthlyRepeatType: string;
    repeatType: string;
    startDate: string;
    startTime: string;
    timezone: string;
    updatedAt: string;
}

export interface SyntheticsCreateBrowserCheckBrowser {
    type?: string;
}

export interface SyntheticsCreateBrowserCheckCheckConnection {
    downloadBandwidth?: number;
    latency?: number;
    packetLoss?: number;
    uploadBandwidth?: number;
}

export interface SyntheticsCreateBrowserCheckCookie {
    domain?: string;
    key?: string;
    path?: string;
    value?: string;
}

export interface SyntheticsCreateBrowserCheckDnsOverride {
    originalDomain?: string;
    originalHost?: string;
}

export interface SyntheticsCreateBrowserCheckExcludedFile {
    exclusionType?: string;
    pattern?: string;
    presetName?: string;
}

export interface SyntheticsCreateBrowserCheckHttpRequestHeader {
    userAgent: string;
}

export interface SyntheticsCreateBrowserCheckJavascriptFile {
    /**
     * The ID of this resource.
     */
    id?: number;
    name?: string;
}

export interface SyntheticsCreateBrowserCheckNotification {
    call?: boolean;
    email?: boolean;
    escalations?: outputs.SyntheticsCreateBrowserCheckNotificationEscalation[];
    muted?: boolean;
    notificationWindows: outputs.SyntheticsCreateBrowserCheckNotificationNotificationWindow[];
    notifyAfterFailureCount?: number;
    notifyOnLocationFailure?: boolean;
    notifyWhos?: outputs.SyntheticsCreateBrowserCheckNotificationNotifyWho[];
    sms?: boolean;
}

export interface SyntheticsCreateBrowserCheckNotificationEscalation {
    afterMinutes?: number;
    call?: boolean;
    email?: boolean;
    isRepeat: boolean;
    notificationWindows: outputs.SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow[];
    notifyWhos?: outputs.SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho[];
    sms?: boolean;
}

export interface SyntheticsCreateBrowserCheckNotificationEscalationNotificationWindow {
    durationInMinutes?: number;
    endTime?: string;
    startTime?: string;
    timeZone?: string;
}

export interface SyntheticsCreateBrowserCheckNotificationEscalationNotifyWho {
    call?: boolean;
    customUserEmail?: string;
    email?: boolean;
    /**
     * The ID of this resource.
     */
    id?: number;
    links: outputs.SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink[];
    sms?: boolean;
    type?: string;
}

export interface SyntheticsCreateBrowserCheckNotificationEscalationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCreateBrowserCheckNotificationNotificationWindow {
    durationInMinutes?: number;
    endTime?: string;
    startTime?: string;
    timeZone?: string;
}

export interface SyntheticsCreateBrowserCheckNotificationNotifyWho {
    call?: boolean;
    customUserEmail?: string;
    email?: boolean;
    /**
     * The ID of this resource.
     */
    id: number;
    links: outputs.SyntheticsCreateBrowserCheckNotificationNotifyWhoLink[];
    sms?: boolean;
    type?: string;
}

export interface SyntheticsCreateBrowserCheckNotificationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCreateBrowserCheckStep {
    how?: string;
    itemMethod?: string;
    name?: string;
    position?: number;
    value?: string;
    variableName?: string;
    what?: string;
}

export interface SyntheticsCreateBrowserCheckSuccessCriteria {
    actionType?: string;
    comparisonString?: string;
    createdAt?: string;
    updatedAt?: string;
}

export interface SyntheticsCreateBrowserCheckThresholdMonitor {
    comparisonType?: string;
    matcher?: string;
    metricName?: string;
    value?: number;
}

export interface SyntheticsCreateBrowserCheckV2Test {
    active?: boolean;
    advancedSettings?: outputs.SyntheticsCreateBrowserCheckV2TestAdvancedSetting[];
    deviceId?: number;
    frequency?: number;
    locationIds?: string[];
    name: string;
    schedulingStrategy?: string;
    startUrl: string;
    transactions: outputs.SyntheticsCreateBrowserCheckV2TestTransaction[];
    urlProtocol: string;
}

export interface SyntheticsCreateBrowserCheckV2TestAdvancedSetting {
    authentications?: outputs.SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication[];
    cookies?: outputs.SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie[];
    headers?: outputs.SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader[];
    hostOverrides?: outputs.SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride[];
    userAgent?: string;
    verifyCertificates?: boolean;
}

export interface SyntheticsCreateBrowserCheckV2TestAdvancedSettingAuthentication {
    password?: string;
    username?: string;
}

export interface SyntheticsCreateBrowserCheckV2TestAdvancedSettingCookie {
    domain?: string;
    key?: string;
    path?: string;
    value?: string;
}

export interface SyntheticsCreateBrowserCheckV2TestAdvancedSettingHeader {
    domain?: string;
    name?: string;
    value?: string;
}

export interface SyntheticsCreateBrowserCheckV2TestAdvancedSettingHostOverride {
    keepHostHeader?: boolean;
    source?: string;
    target?: string;
}

export interface SyntheticsCreateBrowserCheckV2TestTransaction {
    name?: string;
    steps: outputs.SyntheticsCreateBrowserCheckV2TestTransactionStep[];
}

export interface SyntheticsCreateBrowserCheckV2TestTransactionStep {
    action?: string;
    name?: string;
    optionSelector?: string;
    optionSelectorType?: string;
    options?: outputs.SyntheticsCreateBrowserCheckV2TestTransactionStepOption[];
    selector?: string;
    selectorType?: string;
    type?: string;
    url?: string;
    value?: string;
    variableName?: string;
    waitForNav: boolean;
}

export interface SyntheticsCreateBrowserCheckV2TestTransactionStepOption {
    url?: string;
}

export interface SyntheticsCreateBrowserCheckViewport {
    height?: number;
    width?: number;
}

export interface SyntheticsCreateHttpCheckBlackoutPeriod {
    createdAt: string;
    durationInMinutes: number;
    endDate: string;
    endTime: string;
    isRepeat: boolean;
    monthlyRepeatType: string;
    repeatType: string;
    startDate: string;
    startTime: string;
    timezone: string;
    updatedAt: string;
}

export interface SyntheticsCreateHttpCheckCheckConnection {
    downloadBandwidth?: number;
    latency?: number;
    packetLoss?: number;
    uploadBandwidth?: number;
}

export interface SyntheticsCreateHttpCheckHttpRequestHeader {
    userAgent: string;
}

export interface SyntheticsCreateHttpCheckNotification {
    call?: boolean;
    email?: boolean;
    escalations?: outputs.SyntheticsCreateHttpCheckNotificationEscalation[];
    muted?: boolean;
    notificationWindows: outputs.SyntheticsCreateHttpCheckNotificationNotificationWindow[];
    notifyAfterFailureCount?: number;
    notifyOnLocationFailure?: boolean;
    notifyWhos?: outputs.SyntheticsCreateHttpCheckNotificationNotifyWho[];
    sms?: boolean;
}

export interface SyntheticsCreateHttpCheckNotificationEscalation {
    afterMinutes?: number;
    call?: boolean;
    email?: boolean;
    isRepeat: boolean;
    notificationWindows: outputs.SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow[];
    notifyWhos?: outputs.SyntheticsCreateHttpCheckNotificationEscalationNotifyWho[];
    sms?: boolean;
}

export interface SyntheticsCreateHttpCheckNotificationEscalationNotificationWindow {
    durationInMinutes?: number;
    endTime?: string;
    startTime?: string;
    timeZone?: string;
}

export interface SyntheticsCreateHttpCheckNotificationEscalationNotifyWho {
    call?: boolean;
    customUserEmail?: string;
    email?: boolean;
    /**
     * The ID of this resource.
     */
    id?: number;
    links: outputs.SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink[];
    sms?: boolean;
    type?: string;
}

export interface SyntheticsCreateHttpCheckNotificationEscalationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCreateHttpCheckNotificationNotificationWindow {
    durationInMinutes?: number;
    endTime?: string;
    startTime?: string;
    timeZone?: string;
}

export interface SyntheticsCreateHttpCheckNotificationNotifyWho {
    call?: boolean;
    customUserEmail?: string;
    email?: boolean;
    /**
     * The ID of this resource.
     */
    id: number;
    links: outputs.SyntheticsCreateHttpCheckNotificationNotifyWhoLink[];
    sms?: boolean;
    type?: string;
}

export interface SyntheticsCreateHttpCheckNotificationNotifyWhoLink {
    selfHtml: string;
}

export interface SyntheticsCreateHttpCheckSuccessCriteria {
    actionType?: string;
    comparisonString?: string;
    createdAt?: string;
    updatedAt?: string;
}

export interface SyntheticsCreateHttpCheckV2Test {
    active: boolean;
    body?: string;
    frequency: number;
    headers?: outputs.SyntheticsCreateHttpCheckV2TestHeader[];
    locationIds: string[];
    name: string;
    requestMethod: string;
    schedulingStrategy?: string;
    type?: string;
    url: string;
}

export interface SyntheticsCreateHttpCheckV2TestHeader {
    name?: string;
    value?: string;
}

export interface SyntheticsCreateLocationV2Location {
    country?: string;
    default: boolean;
    /**
     * The ID of this resource.
     */
    id: string;
    label: string;
    type: string;
}

export interface SyntheticsCreatePortCheckV2Test {
    active: boolean;
    frequency: number;
    host: string;
    locationIds: string[];
    name: string;
    port: number;
    protocol: string;
    schedulingStrategy?: string;
    type?: string;
    url?: string;
}

export interface SyntheticsCreateVariableV2Variable {
    description: string;
    name: string;
    secret: boolean;
    value: string;
}

export interface SyntheticsDevicesV2CheckDevice {
    /**
     * The ID of this resource.
     */
    id: number;
    label: string;
    networkConnections: outputs.SyntheticsDevicesV2CheckDeviceNetworkConnection[];
    userAgent: string;
    viewportHeight: number;
    viewportWidth: number;
}

export interface SyntheticsDevicesV2CheckDeviceNetworkConnection {
    description: string;
    downloadBandwidth: number;
    latency: number;
    packetLoss: number;
    uploadBandwidth?: number;
}

export interface SyntheticsHttpV2CheckTest {
    active: boolean;
    body: string;
    createdAt: string;
    frequency: number;
    headers: outputs.SyntheticsHttpV2CheckTestHeader[];
    /**
     * The ID of this resource.
     */
    id: number;
    locationIds?: string[];
    name: string;
    requestMethod: string;
    schedulingStrategy: string;
    type: string;
    updatedAt: string;
    url: string;
}

export interface SyntheticsHttpV2CheckTestHeader {
    name?: string;
    value?: string;
}

export interface SyntheticsLocationV2CheckLocation {
    country: string;
    default: boolean;
    /**
     * The ID of this resource.
     */
    id: string;
    label: string;
    type: string;
}

export interface SyntheticsLocationV2CheckMeta {
    activeTestIds: number[];
    pausedTestIds: number[];
}

export interface SyntheticsLocationsV2CheckLocation {
    country: string;
    default: boolean;
    /**
     * The ID of this resource.
     */
    id: string;
    label: string;
    type: string;
}

export interface SyntheticsPortV2CheckTest {
    active: boolean;
    createdAt: string;
    frequency: number;
    host: string;
    /**
     * The ID of this resource.
     */
    id: number;
    locationIds?: string[];
    name: string;
    port: number;
    protocol: string;
    schedulingStrategy: string;
    type: string;
    updatedAt: string;
}

export interface SyntheticsVariableV2CheckVariable {
    createdAt: string;
    description: string;
    /**
     * The ID of this resource.
     */
    id: number;
    name: string;
    secret: boolean;
    updatedAt: string;
    value: string;
}

export interface SyntheticsVariablesV2CheckVariable {
    createdAt: string;
    description: string;
    /**
     * The ID of this resource.
     */
    id: number;
    name: string;
    secret: boolean;
    updatedAt: string;
    value: string;
}

