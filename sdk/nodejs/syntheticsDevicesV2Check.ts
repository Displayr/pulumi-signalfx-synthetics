// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as synthetics from "@pulumi/synthetics";
 *
 * const datasourceDevices = synthetics.syntheticsDevicesV2Check({
 *     devices: [{}],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function syntheticsDevicesV2Check(args?: SyntheticsDevicesV2CheckArgs, opts?: pulumi.InvokeOptions): Promise<SyntheticsDevicesV2CheckResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("synthetics:index/syntheticsDevicesV2Check:syntheticsDevicesV2Check", {
        "devices": args.devices,
    }, opts);
}

/**
 * A collection of arguments for invoking syntheticsDevicesV2Check.
 */
export interface SyntheticsDevicesV2CheckArgs {
    devices?: inputs.SyntheticsDevicesV2CheckDevice[];
}

/**
 * A collection of values returned by syntheticsDevicesV2Check.
 */
export interface SyntheticsDevicesV2CheckResult {
    readonly devices?: outputs.SyntheticsDevicesV2CheckDevice[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as synthetics from "@pulumi/synthetics";
 *
 * const datasourceDevices = synthetics.syntheticsDevicesV2Check({
 *     devices: [{}],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function syntheticsDevicesV2CheckOutput(args?: SyntheticsDevicesV2CheckOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<SyntheticsDevicesV2CheckResult> {
    return pulumi.output(args).apply((a: any) => syntheticsDevicesV2Check(a, opts))
}

/**
 * A collection of arguments for invoking syntheticsDevicesV2Check.
 */
export interface SyntheticsDevicesV2CheckOutputArgs {
    devices?: pulumi.Input<pulumi.Input<inputs.SyntheticsDevicesV2CheckDeviceArgs>[]>;
}
