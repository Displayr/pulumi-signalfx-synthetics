// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as synthetics from "@pulumi/synthetics";
 *
 * const apiV2FooCheck = new synthetics.SyntheticsCreateApiCheckV2("apiV2FooCheck", {tests: [{
 *     active: true,
 *     deviceId: 1,
 *     frequency: 5,
 *     locationIds: ["aws-us-east-1"],
 *     name: "Terraform - Api V2 Checkaroo",
 *     schedulingStrategy: "round_robin",
 *     requests: [{
 *         configurations: [{
 *             body: "\\'{\"alert_name\":\"the service is down\",\"url\":\"https://foo.com/bar\"}\\'\n",
 *             headers: {
 *                 Accept: "application/json",
 *                 "x-foo": "bar",
 *             },
 *             name: "Get products",
 *             requestMethod: "GET",
 *             url: "https://dummyjson.com/products",
 *         }],
 *         setups: [{
 *             extractor: "$.foo",
 *             name: "First setup step",
 *             source: "{\\'foo\\': \\'bar\\'}",
 *             type: "extract_json",
 *             variable: "myVariable",
 *         }],
 *         validations: [{
 *             actual: "{{response.code}}",
 *             comparator: "equals",
 *             expected: "200",
 *             name: "My validation step",
 *             type: "assert_numeric",
 *         }],
 *     }],
 * }]});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class SyntheticsCreateApiCheckV2 extends pulumi.CustomResource {
    /**
     * Get an existing SyntheticsCreateApiCheckV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyntheticsCreateApiCheckV2State, opts?: pulumi.CustomResourceOptions): SyntheticsCreateApiCheckV2 {
        return new SyntheticsCreateApiCheckV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'synthetics:index/syntheticsCreateApiCheckV2:SyntheticsCreateApiCheckV2';

    /**
     * Returns true if the given object is an instance of SyntheticsCreateApiCheckV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyntheticsCreateApiCheckV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyntheticsCreateApiCheckV2.__pulumiType;
    }

    public readonly tests!: pulumi.Output<outputs.SyntheticsCreateApiCheckV2Test[]>;

    /**
     * Create a SyntheticsCreateApiCheckV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyntheticsCreateApiCheckV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyntheticsCreateApiCheckV2Args | SyntheticsCreateApiCheckV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyntheticsCreateApiCheckV2State | undefined;
            resourceInputs["tests"] = state ? state.tests : undefined;
        } else {
            const args = argsOrState as SyntheticsCreateApiCheckV2Args | undefined;
            if ((!args || args.tests === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tests'");
            }
            resourceInputs["tests"] = args ? args.tests : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SyntheticsCreateApiCheckV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SyntheticsCreateApiCheckV2 resources.
 */
export interface SyntheticsCreateApiCheckV2State {
    tests?: pulumi.Input<pulumi.Input<inputs.SyntheticsCreateApiCheckV2Test>[]>;
}

/**
 * The set of arguments for constructing a SyntheticsCreateApiCheckV2 resource.
 */
export interface SyntheticsCreateApiCheckV2Args {
    tests: pulumi.Input<pulumi.Input<inputs.SyntheticsCreateApiCheckV2Test>[]>;
}
