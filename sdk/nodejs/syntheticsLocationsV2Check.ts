// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as synthetics from "@pulumi/synthetics";
 *
 * const datasourceLocations = synthetics.syntheticsLocationsV2Check({
 *     locations: [{}],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function syntheticsLocationsV2Check(args?: SyntheticsLocationsV2CheckArgs, opts?: pulumi.InvokeOptions): Promise<SyntheticsLocationsV2CheckResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("synthetics:index/syntheticsLocationsV2Check:syntheticsLocationsV2Check", {
        "locations": args.locations,
    }, opts);
}

/**
 * A collection of arguments for invoking syntheticsLocationsV2Check.
 */
export interface SyntheticsLocationsV2CheckArgs {
    locations?: inputs.SyntheticsLocationsV2CheckLocation[];
}

/**
 * A collection of values returned by syntheticsLocationsV2Check.
 */
export interface SyntheticsLocationsV2CheckResult {
    readonly defaultLocationIds: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locations?: outputs.SyntheticsLocationsV2CheckLocation[];
}
/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as synthetics from "@pulumi/synthetics";
 *
 * const datasourceLocations = synthetics.syntheticsLocationsV2Check({
 *     locations: [{}],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function syntheticsLocationsV2CheckOutput(args?: SyntheticsLocationsV2CheckOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<SyntheticsLocationsV2CheckResult> {
    return pulumi.output(args).apply((a: any) => syntheticsLocationsV2Check(a, opts))
}

/**
 * A collection of arguments for invoking syntheticsLocationsV2Check.
 */
export interface SyntheticsLocationsV2CheckOutputArgs {
    locations?: pulumi.Input<pulumi.Input<inputs.SyntheticsLocationsV2CheckLocationArgs>[]>;
}
